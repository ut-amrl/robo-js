"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const commander = require("commander");
const check_runtime_opts_1 = require("./runtime/check-runtime-opts");
commander.option('-y, --yield <interval>', 'time (in milliseconds) between yields to the event loop (default: 100)');
commander.option('-e, --env <env>', 'the runtime environment for testing (default: node)');
commander.option('--variance', 'measure time elapsed between each yield (default: false)');
commander.option('--time-per-elapsed <interval>', `an estimate of the time that elapses between calls to the internal suspend \
function (default: 1)`);
commander.option('-r, --resample-interval <interval>', `interval between resamples. Only valid with --estimator=velocity. Default: \
same as -y if -y is specified, otherwise 100.`);
commander.option('--stop <duration>', 'the time after which the program should be terminated (default: never stop)');
commander.option('--estimator <estimator>', `one of exact, reservoir, velocity, interrupt, or countdown (default: velocity)`);
commander.option('--stack-size <size>', 'Maximum number of stack frames allowed in the runtime stack. Ignored if the runtime does not support deep stacks (default: Infinity)');
commander.option('--restore-frames <size>', 'Number of frames to be restored onto the JS stack after a stack save. A constant implies deep stacks. Infinity implies shallow stacks. (default: Infinity)');
commander.option('--remote <url>', 'URL of a remote WebDriver server (usually http://<hostname>:4444/wd/hub)');
commander.option('--local-host <hostname>', 'The host name of this host (default: localhost)', x => x, 'localhost');
commander.option('--local-port <port>', 'the port to use on this host (default: OS chooses)');
commander.arguments('<filename>');
function parseRuntimeOpts(rawArgs) {
    const args = commander.parse(["", "", ...rawArgs]);
    let resampleInterval = args.resampleInterval || args.yield;
    if (isNaN(resampleInterval)) {
        resampleInterval = 100;
    }
    return check_runtime_opts_1.checkAndFillRuntimeOpts({
        filename: args.args[0],
        yieldInterval: args.yield,
        resampleInterval: args.resampleInterval,
        estimator: args.estimator,
        timePerElapsed: args.timePerElapsed,
        stop: args.stop,
        env: args.env,
        variance: args.variance,
        stackSize: args.stackSize,
        restoreFrames: args.restoreFrames
    });
}
exports.parseRuntimeOpts = parseRuntimeOpts;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2UtcnVudGltZS1vcHRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BhcnNlLXJ1bnRpbWUtb3B0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUF1QztBQUV2QyxxRUFBdUU7QUFFdkUsU0FBUyxDQUFDLE1BQU0sQ0FDZCx3QkFBd0IsRUFDeEIsd0VBQXdFLENBQUMsQ0FBQztBQUU1RSxTQUFTLENBQUMsTUFBTSxDQUNkLGlCQUFpQixFQUNqQixxREFBcUQsQ0FBQyxDQUFDO0FBRXpELFNBQVMsQ0FBQyxNQUFNLENBQ2QsWUFBWSxFQUNaLDBEQUEwRCxDQUFDLENBQUM7QUFFOUQsU0FBUyxDQUFDLE1BQU0sQ0FDZCwrQkFBK0IsRUFDL0I7c0JBQ29CLENBQUMsQ0FBQztBQUV4QixTQUFTLENBQUMsTUFBTSxDQUNkLG9DQUFvQyxFQUNwQzs4Q0FDNEMsQ0FBQyxDQUFDO0FBRWhELFNBQVMsQ0FBQyxNQUFNLENBQ2QsbUJBQW1CLEVBQ25CLDZFQUE2RSxDQUFDLENBQUM7QUFFakYsU0FBUyxDQUFDLE1BQU0sQ0FDZCx5QkFBeUIsRUFDekIsZ0ZBQWdGLENBQUMsQ0FBQztBQUVwRixTQUFTLENBQUMsTUFBTSxDQUNkLHFCQUFxQixFQUNyQixzSUFBc0ksQ0FBQyxDQUFDO0FBRTFJLFNBQVMsQ0FBQyxNQUFNLENBQ2QseUJBQXlCLEVBQ3pCLDRKQUE0SixDQUFDLENBQUM7QUFFaEssU0FBUyxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsRUFDL0IsMEVBQTBFLENBQUMsQ0FBQztBQUU5RSxTQUFTLENBQUMsTUFBTSxDQUFDLHlCQUF5QixFQUN4QyxpREFBaUQsRUFDakQsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQ04sV0FBVyxDQUFDLENBQUM7QUFFZixTQUFTLENBQUMsTUFBTSxDQUFDLHFCQUFxQixFQUNwQyxvREFBb0QsQ0FBQyxDQUFDO0FBRXhELFNBQVMsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUM7QUFHbEMsU0FBZ0IsZ0JBQWdCLENBQUMsT0FBaUI7SUFFaEQsTUFBTSxJQUFJLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBRW5ELElBQUksZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDM0QsSUFBSSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtRQUMzQixnQkFBZ0IsR0FBRyxHQUFHLENBQUM7S0FDeEI7SUFFRCxPQUFPLDRDQUF1QixDQUFDO1FBQzdCLFFBQVEsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUN0QixhQUFhLEVBQUUsSUFBSSxDQUFDLEtBQUs7UUFDekIsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLGdCQUFnQjtRQUN2QyxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVM7UUFDekIsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjO1FBQ25DLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtRQUNmLEdBQUcsRUFBRSxJQUFJLENBQUMsR0FBRztRQUNiLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUTtRQUN2QixTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVM7UUFDekIsYUFBYSxFQUFFLElBQUksQ0FBQyxhQUFhO0tBQ2xDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFyQkQsNENBcUJDIn0=