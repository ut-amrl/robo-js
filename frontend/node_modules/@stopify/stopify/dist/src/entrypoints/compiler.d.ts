import { RawSourceMap } from 'source-map';
import { CompilerOpts, RuntimeOpts, AsyncRun, AsyncEval, Error } from '../types';
import { Runtime } from '@stopify/continuations-runtime';
import * as t from 'babel-types';
export * from '@stopify/continuations-runtime/dist/src/runtime/runtime';
export * from '@stopify/continuations/dist/src/runtime/implicitApps';
export { knownBuiltIns } from '@stopify/continuations/dist/src/common/cannotCapture';
export { Result } from '@stopify/continuations-runtime';
export { AsyncRun, AsyncEval, Error, CompilerOpts, RuntimeOpts };
import * as compiler from '../stopify/compileFunction';
export { compiler };
/**
 * Called by the stopified program to get suspend() and other functions.
 */
export declare function init(rts: Runtime): AsyncRun;
export declare function stopifyLocallyFromAst(src: t.Program, sourceMap?: RawSourceMap, optionalCompileOpts?: Partial<CompilerOpts>, optionalRuntimeOpts?: Partial<RuntimeOpts>): (AsyncRun & AsyncEval) | Error;
/**
 * Control the execution of a pre-compiled program.
 *
 * @param url URL of a pre-compiled program
 * @param opts runtime settings
 */
export declare function stopifyLocally(src: string, optionalCompileOpts?: Partial<CompilerOpts>, optionalRuntimeOpts?: Partial<RuntimeOpts>): (AsyncRun & AsyncEval) | Error;
