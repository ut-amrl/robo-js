import { RuntimeOpts } from '../types';
import { ElapsedTimeEstimator } from '@stopify/estimators';
/**
 * Checks the current time whenever 'elapsedTime' is applied, instead of
 * estimating the elapsed time.
 */
export declare function makeExact(): ElapsedTimeEstimator;
/**
 * Assumes that 'elapsedTime' is applied every 'timePerElapsed' milliseconds
 * and uses this to estimate the elapsed time.
 *
 * @param timePerElapsed time (in milliseconds) between successive calls to
 *                       'elapsedTime'
 */
export declare function makeCountdown(timePerElapsed: number): ElapsedTimeEstimator;
/**
 * Estimates 'elapsedTime' by sampling the current time when 'elapsedTime'
 * is applied.
 *
 * We use reservoir sampling with a reservoir of size 1, thus all times are
 * equally likely to be selected.
 */
export declare function makeSampleAverage(): ElapsedTimeEstimator;
/**
 * Estimates 'elapsedTime' by periodically resampling the current time.
 *
 * @param resample Period between resamples.
 */
export declare function makeVelocityEstimator(resample?: number): ElapsedTimeEstimator;
export declare function makeEstimator(opts: RuntimeOpts): ElapsedTimeEstimator;
