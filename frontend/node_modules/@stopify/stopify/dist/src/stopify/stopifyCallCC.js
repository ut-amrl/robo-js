"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const t = require("babel-types");
const callcc = require("@stopify/continuations");
const suspendStop_1 = require("./suspendStop");
const suspendStep_1 = require("./suspendStep");
const generic_1 = require("../generic");
const hygiene = require("@stopify/hygiene");
const util = require("@stopify/util");
exports.visitor = {
    Program(path, state) {
        const opts = state.opts;
        const insertSuspend = state.opts.debug ? suspendStep_1.default : suspendStop_1.default;
        const onDoneBody = [];
        opts.onDone = t.functionExpression(t.identifier('onDone'), [t.identifier('result')], t.blockStatement(onDoneBody));
        if (!opts.compileFunction) {
            onDoneBody.push(t.expressionStatement(t.callExpression(t.memberExpression(t.identifier('$S'), t.identifier('onEnd')), [t.identifier('result')])));
        }
        path.stop();
        const filename = state.file.opts.filename;
        // NOTE(arjun): Small hack to force the implicitApps file to be in
        // "sane mode". Without something like this, we get non-terminating
        // behavior.
        if (filename.endsWith('implicitApps.js')) {
            state.opts.esMode = 'sane';
        }
        hygiene.init(path);
        util.transformFromAst(path, [
            [hygiene.plugin,
                {
                    reserved: callcc.reserved,
                    global: t.memberExpression(t.identifier('$S'), t.identifier('g'))
                }
            ]
        ]);
        if (!state.opts.debug) {
            util.transformFromAst(path, [callcc.flatness]);
        }
        generic_1.timeSlow('insertSuspend', () => util.transformFromAst(path, [[insertSuspend, opts]]));
        generic_1.timeSlow('(control ...) elimination', () => util.transformFromAst(path, [[callcc.plugin, opts]]));
        hygiene.reset();
        if (opts.compileFunction) {
            // Do nothing
        }
        else if (opts.requireRuntime) {
            // var $S = require('stopify/dist/src/runtime/rts').init($__R);;
            path.node.body.splice(3, 0, t.variableDeclaration('var', [t.variableDeclarator(t.identifier('$S'), t.callExpression(t.memberExpression(t.callExpression(t.identifier('require'), [t.stringLiteral('stopify/dist/src/runtime/node')]), t.identifier('init')), [t.identifier('$__R')]))]));
        }
        else {
            // var $S = stopify.init($__R);
            path.node.body.splice(3, 0, t.variableDeclaration('var', [t.variableDeclarator(t.identifier('$S'), t.callExpression(t.memberExpression(t.identifier('stopify'), t.identifier('init')), [t.identifier('$__R')]))]));
        }
    }
};
function plugin() {
    return {
        visitor: exports.visitor
    };
}
exports.plugin = plugin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcGlmeUNhbGxDQy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdG9waWZ5L3N0b3BpZnlDYWxsQ0MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxpQ0FBaUM7QUFFakMsaURBQWlEO0FBQ2pELCtDQUF3QztBQUN4QywrQ0FBd0M7QUFDeEMsd0NBQXNDO0FBQ3RDLDRDQUE0QztBQUM1QyxzQ0FBc0M7QUFFekIsUUFBQSxPQUFPLEdBQVk7SUFDOUIsT0FBTyxDQUFDLElBQXlCLEVBQUUsS0FBSztRQUN0QyxNQUFNLElBQUksR0FBd0IsS0FBSyxDQUFDLElBQUksQ0FBQztRQUM3QyxNQUFNLGFBQWEsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMscUJBQVcsQ0FBQyxDQUFDLENBQUMscUJBQVcsQ0FBQztRQUVuRSxNQUFNLFVBQVUsR0FBa0IsRUFBRSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQ2pGLENBQUMsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztRQUNoQyxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUN6QixVQUFVLENBQUMsSUFBSSxDQUNiLENBQUMsQ0FBQyxtQkFBbUIsQ0FDbkIsQ0FBQyxDQUFDLGNBQWMsQ0FDZCxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQzdELENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ25DO1FBRUQsSUFBSSxDQUFDLElBQUks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