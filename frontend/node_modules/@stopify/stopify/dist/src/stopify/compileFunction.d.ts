/**
 * `func` compile mode should be used when function bodies need to be compiled
 * while preserving the function signatures. This is currently being used in
 * the pyret compiler.
 *
 * This passes around information to make sure that:
 * - the function signature is preserved
 * - globals are not redeclared (since the input function might capture variables)
 */
import * as babel from 'babel-core';
import * as callcc from '@stopify/continuations';
export { RV_SENTINAL, EXN_SENTINAL, knownBuiltIns } from '@stopify/continuations';
export declare function compileFunction(code: string, opts?: callcc.CompilerOpts): string;
export declare function compileEval(code: string, compilerOpts: callcc.CompilerOpts, renames: {
    [key: string]: string;
}, boxes: string[]): string;
export default function (): {
    visitor: babel.Visitor;
};
