"use strict";
/**
 * Module to add labels to breaks and continues according to tagged AST nodes
 * generated by desugarLoop.
 *
 */
Object.defineProperty(exports, "__esModule", { value: true });
const t = require("babel-types");
const labelVisitor = {
    ContinueStatement: function (path) {
        const { label } = path.node;
        if (label) {
            const breakStatement = t.breakStatement(label);
            path.replaceWith(breakStatement);
        }
        else {
            const loopParent = path.findParent(p => p.isWhileStatement());
            const continueLabel = loopParent.node.continue_label;
            const breakStatement = t.breakStatement(continueLabel);
            path.replaceWith(breakStatement);
        }
    },
    BreakStatement: function (path) {
        const label = path.node.label;
        if (label === null) {
            const labeledParent = path.findParent(p => p.isLoop() || p.isSwitchStatement());
            if (labeledParent === null) {
                return;
            }
            path.node.label = labeledParent.node.break_label;
        }
    },
};
module.exports = function () {
    return { visitor: labelVisitor };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVzdWdhckxhYmVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdHMvZGVzdWdhckxhYmVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7OztHQUlHOztBQUdILGlDQUFpQztBQUdqQyxNQUFNLFlBQVksR0FBYTtJQUM3QixpQkFBaUIsRUFBRSxVQUFVLElBQW1DO1FBQzlELE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQzVCLElBQUksS0FBSyxFQUFFO1lBQ1QsTUFBTSxjQUFjLEdBQUcsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUMvQyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1NBQ2xDO2FBQU07WUFDTCxNQUFNLFVBQVUsR0FDZCxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixFQUFFLENBQUMsQ0FBQztZQUM3QyxNQUFNLGFBQWEsR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQztZQUVyRCxNQUFNLGNBQWMsR0FBRyxDQUFDLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQ3ZELElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDbEM7SUFDSCxDQUFDO0lBRUQsY0FBYyxFQUFFLFVBQVUsSUFBdUM7UUFDL0QsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDOUIsSUFBSSxLQUFLLEtBQUssSUFBSSxFQUFFO1lBQ2xCLE1BQU0sYUFBYSxHQUNqQixJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUM7WUFFNUQsSUFBSSxhQUFhLEtBQUssSUFBSSxFQUFFO2dCQUMxQixPQUFPO2FBQ1I7WUFFRCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBaUIsYUFBYSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7U0FDaEU7SUFDSCxDQUFDO0NBQ0YsQ0FBQztBQUVGLE1BQU0sQ0FBQyxPQUFPLEdBQUc7SUFDZixPQUFPLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBRSxDQUFDO0FBQ25DLENBQUMsQ0FBQyJ9