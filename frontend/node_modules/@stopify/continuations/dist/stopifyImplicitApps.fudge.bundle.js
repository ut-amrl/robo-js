var $i =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const $__C = stopify.compiler;
var $__T = stopify;
var $__R = $__T.newRTS("fudge");
var handleNew, $top;
if ($__R.mode) handleNew = {
    box: undefined
};
if ($__R.mode) $top = {
    box: undefined
};
if ($__R.mode) handleNew.box = function fun0(constr, ...args) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [result0, obj0, app1, app0] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [result0, obj0, app1, app0];
    }

    var restoreNextFrame = () => {
        return fun0.call(this, constr, ...args);
    };

    var app0, app1, obj0, result0;
    if ($__R.mode) app0 = $__C.knownBuiltIns.includes(constr);

    if ($__R.mode && app0 || !$__R.mode && target === 1) {
        if ($__R.mode) {
            app1 = new constr(...args);
            $__R.remainingStack++;
        }

        return app1;
    }

    if ($__R.mode) obj0 = Object.create(constr.prototype);
    result0 = constr.apply(obj0, args);
    if ($__R.mode) $__R.remainingStack++;
    return typeof result0 === "object" ? result0 : obj0;
    $__R.remainingStack++;
};
if ($__R.mode) $top.box = function fun7() {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [div, toPrimitive, toKey, add, mul, sub] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [div, toPrimitive, toKey, add, mul, sub];
    }

    var restoreNextFrame = () => {
        return fun7.call(this);
    };

    var toPrimitive, toKey, add, mul, sub, div;

    if ($__R.mode) {
        toPrimitive = {
            box: undefined
        };
        toKey = {
            box: undefined
        };
        add = {
            box: undefined
        };
        mul = {
            box: undefined
        };
        sub = {
            box: undefined
        };
        div = {
            box: undefined
        };

        toPrimitive.box = function fun1(x) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [app2, v00] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [app2, v00];
            }

            var restoreNextFrame = () => {
                return fun1.call(this, x);
            };

            var v00, app2;

            // TODO(arjun): This isn't exactly the right order.
            if ($__R.mode && typeof x === 'object' && x !== 'null' || !$__R.mode && (target === 5 || target === 4)) {
                v00 = x.valueOf();

                if ($__R.mode && typeof v00 === 'object' && v00 !== 'null' || !$__R.mode && target === 5) {
                    app2 = x.toString();
                    if ($__R.mode) v00 = app2;

                    if ($__R.mode && typeof v00 === 'object' && v00 !== 'null') {
                        if ($__R.mode) $__R.remainingStack++;

                        return undefined;
                    }

                    if ($__R.mode) $__R.remainingStack++;

                    return v00;
                }

                if ($__R.mode) $__R.remainingStack++;

                return v00;
            }

            if ($__R.mode) $__R.remainingStack++;

            return x;
            $__R.remainingStack++;
        };

        toKey.box = function fun2(x) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [r00] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [r00];
            }

            var restoreNextFrame = () => {
                return fun2.call(this, x);
            };

            var r00;
            r00 = toPrimitive.box(x);

            if ($__R.mode && (typeof r00 === 'string' || typeof r00 === 'number')) {
                if ($__R.mode) $__R.remainingStack++;

                return r00;
            } else if ($__R.mode) {
                if ($__R.mode) $__R.remainingStack++;

                return String(r00);
            }

            $__R.remainingStack++;
        };

        add.box = function fun3(x, y) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [app4, app3] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [app4, app3];
            }

            var restoreNextFrame = () => {
                return fun3.call(this, x, y);
            };

            var app3, app4;
            app3 = toPrimitive.box(x);
            app4 = toPrimitive.box(y);
            if ($__R.mode) $__R.remainingStack++;

            return app3 + app4;
            $__R.remainingStack++;
        };

        mul.box = function fun4(x, y) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [app6, app5] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [app6, app5];
            }

            var restoreNextFrame = () => {
                return fun4.call(this, x, y);
            };

            var app5, app6;
            app5 = toPrimitive.box(x);
            app6 = toPrimitive.box(y);
            if ($__R.mode) $__R.remainingStack++;

            return app5 * app6;
            $__R.remainingStack++;
        };

        sub.box = function fun5(x, y) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [app8, app7] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [app8, app7];
            }

            var restoreNextFrame = () => {
                return fun5.call(this, x, y);
            };

            var app7, app8;
            app7 = toPrimitive.box(x);
            app8 = toPrimitive.box(y);
            if ($__R.mode) $__R.remainingStack++;

            return app7 - app8;
            $__R.remainingStack++;
        };

        div.box = function fun6(x, y) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [app10, app9] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [app10, app9];
            }

            var restoreNextFrame = () => {
                return fun6.call(this, x, y);
            };

            var app9, app10;
            app9 = toPrimitive.box(x);
            app10 = toPrimitive.box(y);
            if ($__R.mode) $__R.remainingStack++;

            return app9 / app10;
            $__R.remainingStack++;
        };

        Object.defineProperty(exports, "__esModule", { value: true });

        exports.toKey = toKey.box;

        exports.add = add.box;

        exports.mul = mul.box;

        exports.sub = sub.box;

        exports.div = div.box;
    }

    $__R.remainingStack++;
};

const onDone = function onDone() {};

$__R.runtime($top.box, onDone);

/***/ })
/******/ ]);