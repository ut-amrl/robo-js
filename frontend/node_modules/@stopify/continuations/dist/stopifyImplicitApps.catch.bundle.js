var $i =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const $__C = stopify.compiler;
var $__T = stopify;
var $__R = $__T.newRTS("catch");
var handleNew, $top;
if ($__R.mode) handleNew = {
    box: undefined
};
if ($__R.mode) $top = {
    box: undefined
};
if ($__R.mode) handleNew.box = function fun0(constr, ...args) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [result0, obj0, app1, app0] = $frame.locals;
    }

    try {
        var app0, app1, obj0, result0;
        if ($__R.mode) app0 = $__C.knownBuiltIns.includes(constr);

        if ($__R.mode && app0 || !$__R.mode && target === 1) {
            if ($__R.mode) {
                app1 = new constr(...args);
                $__R.remainingStack++;
            }

            return app1;
        }

        if ($__R.mode) obj0 = Object.create(constr.prototype);

        if ($__R.mode) {
            target = 3;
            result0 = constr.apply(obj0, args);
        } else if (target === 3) result0 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) $__R.remainingStack++;
        return typeof result0 === "object" ? result0 : obj0;
    } catch (exn0) {
        if (exn0 instanceof $__T.Capture) {
            exn0.stack.push({
                kind: "rest",
                f: fun0,
                index: target,
                locals: [result0, obj0, app1, app0],
                params: [constr, ...args],
                this: this
            });
        }

        throw exn0;
    }

    $__R.remainingStack++;
};
if ($__R.mode) $top.box = function fun7() {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [div, toPrimitive, toKey, add, mul, sub] = $frame.locals;
    }

    try {
        var toPrimitive, toKey, add, mul, sub, div;

        if ($__R.mode) {
            toPrimitive = {
                box: undefined
            };
            toKey = {
                box: undefined
            };
            add = {
                box: undefined
            };
            mul = {
                box: undefined
            };
            sub = {
                box: undefined
            };
            div = {
                box: undefined
            };

            toPrimitive.box = function fun1(x) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [app2, v00] = $frame.locals;
                }

                try {
                    var v00, app2;

                    // TODO(arjun): This isn't exactly the right order.
                    if ($__R.mode && typeof x === 'object' && x !== 'null' || !$__R.mode && (target === 5 || target === 4)) {
                        if ($__R.mode) {
                            target = 4;
                            v00 = x.valueOf();
                        } else if (target === 4) v00 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                        if ($__R.mode && typeof v00 === 'object' && v00 !== 'null' || !$__R.mode && target === 5) {
                            if ($__R.mode) {
                                target = 5;
                                app2 = x.toString();
                            } else if (target === 5) app2 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                            if ($__R.mode) v00 = app2;

                            if ($__R.mode && typeof v00 === 'object' && v00 !== 'null') {
                                if ($__R.mode) $__R.remainingStack++;

                                return undefined;
                            }

                            if ($__R.mode) $__R.remainingStack++;

                            return v00;
                        }

                        if ($__R.mode) $__R.remainingStack++;

                        return v00;
                    }

                    if ($__R.mode) $__R.remainingStack++;

                    return x;
                } catch (exn1) {
                    if (exn1 instanceof $__T.Capture) {
                        exn1.stack.push({
                            kind: "rest",
                            f: fun1,
                            index: target,
                            locals: [app2, v00],
                            params: [x],
                            this: this
                        });
                    }

                    throw exn1;
                }

                $__R.remainingStack++;
            };

            toKey.box = function fun2(x) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [r00] = $frame.locals;
                }

                try {
                    var r00;

                    if ($__R.mode) {
                        target = 6;
                        r00 = toPrimitive.box(x);
                    } else if (target === 6) r00 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode && (typeof r00 === 'string' || typeof r00 === 'number')) {
                        if ($__R.mode) $__R.remainingStack++;

                        return r00;
                    } else if ($__R.mode) {
                        if ($__R.mode) $__R.remainingStack++;

                        return String(r00);
                    }
                } catch (exn2) {
                    if (exn2 instanceof $__T.Capture) {
                        exn2.stack.push({
                            kind: "rest",
                            f: fun2,
                            index: target,
                            locals: [r00],
                            params: [x],
                            this: this
                        });
                    }

                    throw exn2;
                }

                $__R.remainingStack++;
            };

            add.box = function fun3(x, y) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [app4, app3] = $frame.locals;
                }

                try {
                    var app3, app4;

                    if ($__R.mode) {
                        target = 8;
                        app3 = toPrimitive.box(x);
                    } else if (target === 8) app3 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode) {
                        target = 9;
                        app4 = toPrimitive.box(y);
                    } else if (target === 9) app4 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode) $__R.remainingStack++;

                    return app3 + app4;
                } catch (exn3) {
                    if (exn3 instanceof $__T.Capture) {
                        exn3.stack.push({
                            kind: "rest",
                            f: fun3,
                            index: target,
                            locals: [app4, app3],
                            params: [x, y],
                            this: this
                        });
                    }

                    throw exn3;
                }

                $__R.remainingStack++;
            };

            mul.box = function fun4(x, y) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [app6, app5] = $frame.locals;
                }

                try {
                    var app5, app6;

                    if ($__R.mode) {
                        target = 10;
                        app5 = toPrimitive.box(x);
                    } else if (target === 10) app5 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode) {
                        target = 11;
                        app6 = toPrimitive.box(y);
                    } else if (target === 11) app6 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode) $__R.remainingStack++;

                    return app5 * app6;
                } catch (exn4) {
                    if (exn4 instanceof $__T.Capture) {
                        exn4.stack.push({
                            kind: "rest",
                            f: fun4,
                            index: target,
                            locals: [app6, app5],
                            params: [x, y],
                            this: this
                        });
                    }

                    throw exn4;
                }

                $__R.remainingStack++;
            };

            sub.box = function fun5(x, y) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [app8, app7] = $frame.locals;
                }

                try {
                    var app7, app8;

                    if ($__R.mode) {
                        target = 12;
                        app7 = toPrimitive.box(x);
                    } else if (target === 12) app7 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode) {
                        target = 13;
                        app8 = toPrimitive.box(y);
                    } else if (target === 13) app8 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode) $__R.remainingStack++;

                    return app7 - app8;
                } catch (exn5) {
                    if (exn5 instanceof $__T.Capture) {
                        exn5.stack.push({
                            kind: "rest",
                            f: fun5,
                            index: target,
                            locals: [app8, app7],
                            params: [x, y],
                            this: this
                        });
                    }

                    throw exn5;
                }

                $__R.remainingStack++;
            };

            div.box = function fun6(x, y) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [app10, app9] = $frame.locals;
                }

                try {
                    var app9, app10;

                    if ($__R.mode) {
                        target = 14;
                        app9 = toPrimitive.box(x);
                    } else if (target === 14) app9 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode) {
                        target = 15;
                        app10 = toPrimitive.box(y);
                    } else if (target === 15) app10 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode) $__R.remainingStack++;

                    return app9 / app10;
                } catch (exn6) {
                    if (exn6 instanceof $__T.Capture) {
                        exn6.stack.push({
                            kind: "rest",
                            f: fun6,
                            index: target,
                            locals: [app10, app9],
                            params: [x, y],
                            this: this
                        });
                    }

                    throw exn6;
                }

                $__R.remainingStack++;
            };

            Object.defineProperty(exports, "__esModule", { value: true });

            exports.toKey = toKey.box;

            exports.add = add.box;

            exports.mul = mul.box;

            exports.sub = sub.box;

            exports.div = div.box;
        }
    } catch (exn7) {
        if (exn7 instanceof $__T.Capture) {
            exn7.stack.push({
                kind: "rest",
                f: fun7,
                index: target,
                locals: [div, toPrimitive, toKey, add, mul, sub],
                params: [],
                this: this
            });
        }

        throw exn7;
    }

    $__R.remainingStack++;
};

const onDone = function onDone() {};

$__R.runtime($top.box, onDone);

/***/ })
/******/ ]);