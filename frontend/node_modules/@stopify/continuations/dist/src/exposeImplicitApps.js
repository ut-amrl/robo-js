"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const t = require("babel-types");
const imm = require("immutable");
const helpers_1 = require("./helpers");
exports.implicitsIdentifier = t.identifier('$i');
const binopTable = imm.Map([
    ['+', 'add'],
    ['-', 'sub'],
    ['/', 'div'],
    ['*', 'mul']
]);
function implicit(name, ...args) {
    return t.callExpression(t.memberExpression(exports.implicitsIdentifier, t.identifier(name)), args);
}
const implicitsPath = `${helpers_1.runtimePath}/implicitApps`;
const visitor = {
    Program(path, state) {
        const opts = state.opts;
        if (!opts.requireRuntime) {
            return;
        }
        path.node.body.unshift(t.variableDeclaration('var', [t.variableDeclarator(exports.implicitsIdentifier, t.callExpression(t.identifier('require'), [t.stringLiteral(implicitsPath)]))]));
    },
    BinaryExpression(path) {
        const fun = binopTable.get(path.node.operator);
        if (typeof fun !== 'string') {
            return;
        }
        path.replaceWith(implicit(fun, path.node.left, path.node.right));
    },
    MemberExpression: {
        exit(path) {
            if (!path.node.computed) {
                return;
            }
            path.node.property = implicit('toKey', path.node.property);
        }
    }
};
function plugin() {
    return { visitor };
}
exports.plugin = plugin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwb3NlSW1wbGljaXRBcHBzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2V4cG9zZUltcGxpY2l0QXBwcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLGlDQUFpQztBQUNqQyxpQ0FBaUM7QUFDakMsdUNBQXdDO0FBRTNCLFFBQUEsbUJBQW1CLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUV0RCxNQUFNLFVBQVUsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFnQjtJQUN4QyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUM7SUFDWixDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUM7SUFDWixDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUM7SUFDWixDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUM7Q0FBQyxDQUFDLENBQUM7QUFFakIsU0FBUyxRQUFRLENBQUMsSUFBWSxFQUFFLEdBQUcsSUFBb0I7SUFDckQsT0FBTyxDQUFDLENBQUMsY0FBYyxDQUNyQixDQUFDLENBQUMsZ0JBQWdCLENBQUMsMkJBQW1CLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUMzRCxJQUFJLENBQUMsQ0FBQztBQUNWLENBQUM7QUFFRCxNQUFNLGFBQWEsR0FBRyxHQUFHLHFCQUFXLGVBQWUsQ0FBQztBQUVwRCxNQUFNLE9BQU8sR0FBWTtJQUN2QixPQUFPLENBQUMsSUFBeUIsRUFBRSxLQUFLO1FBQ3RDLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUM7UUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUU7WUFDeEIsT0FBTztTQUNSO1FBRUQsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUNwQixDQUFDLENBQUMsbUJBQW1CLENBQUMsS0FBSyxFQUMzQixDQUFDLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQywyQkFBbUIsRUFDdEMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxFQUN0QyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUNELGdCQUFnQixDQUFDLElBQWtDO1FBQ2pELE1BQU0sR0FBRyxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMvQyxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsRUFBRTtZQUMzQixPQUFPO1NBQ1I7UUFDRCxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ25FLENBQUM7SUFDRCxnQkFBZ0IsRUFBRTtRQUNoQixJQUFJLENBQUMsSUFBa0M7WUFDckMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO2dCQUN2QixPQUFPO2FBQ1I7WUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDN0QsQ0FBQztLQUNGO0NBQ0YsQ0FBQztBQUVGLFNBQWdCLE1BQU07SUFDcEIsT0FBTyxFQUFFLE9BQU8sRUFBRSxDQUFDO0FBQ3JCLENBQUM7QUFGRCx3QkFFQyJ9