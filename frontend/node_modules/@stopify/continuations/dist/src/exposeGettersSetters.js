"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const t = require("babel-types");
const helpers_1 = require("./helpers");
const gettersRuntime = t.identifier('$gs');
const get_prop = t.memberExpression(gettersRuntime, t.identifier('get_prop'));
const set_prop = t.memberExpression(gettersRuntime, t.identifier('set_prop'));
const delete_prop = t.memberExpression(gettersRuntime, t.identifier('delete_prop'));
// Stops $gs.get_prop and $gs.set_prop from causing an infinite loop.
set_prop.exposed = true;
get_prop.exposed = true;
delete_prop.exposed = true;
function $func(func, ...args) {
    return t.callExpression(func, args);
}
const gettersRuntimePath = `${helpers_1.runtimePath}/gettersSetters.js`;
let enableGetters = false;
const gettersUsedVisitor = {
    ObjectMethod(path) {
        if (path.node.kind !== 'method') {
            enableGetters = true;
            path.stop();
        }
    },
    MemberExpression(path) {
        const { object, property } = path.node;
        if (t.isIdentifier(object) && object.name === 'Object' &&
            t.isIdentifier(property) && property.name === 'defineProperty') {
            enableGetters = true;
            path.stop();
        }
    }
};
const visitor = {
    Program(path, state) {
        path.traverse(gettersUsedVisitor);
        if (!enableGetters) {
            console.log('No uses of getters found, disabling --getters');
            path.stop();
        }
        const opts = state.opts;
        if (!opts.requireRuntime) {
            return;
        }
        path.node.body.unshift(t.variableDeclaration('var', [t.variableDeclarator(gettersRuntime, t.callExpression(t.identifier('require'), [t.stringLiteral(gettersRuntimePath)]))]));
    },
    UnaryExpression: {
        enter(path) {
            const { operator, argument } = path.node;
            // Support property deletion.
            if (operator === 'delete' && t.isMemberExpression(argument)) {
                const { object, property, computed } = argument;
                const prop = computed ?
                    property :
                    t.stringLiteral(property.name);
                path.replaceWith($func(delete_prop, object, prop));
            }
        }
    },
    MemberExpression(path) {
        const p = path.parent;
        const { object, property } = path.node;
        // Only useful for console.log and various function on Math.
        if (path.node.mark === 'Flat') {
            return;
        }
        // Setters
        if (t.isAssignmentExpression(p) && p.left === path.node && p.operator === '=') {
            const prop = path.node.computed ?
                property :
                t.stringLiteral(property.name);
            path.parentPath.replaceWith($func(set_prop, object, prop, p.right));
        }
        else if (t.isUpdateExpression(p) || t.isAssignmentExpression(p) ||
            path.node.exposed) {
            return;
        }
        // Getters
        else {
            const prop = path.node.computed ?
                property :
                t.stringLiteral(property.name);
            path.replaceWith($func(get_prop, object, prop));
        }
    }
};
function plugin() {
    return { visitor };
}
exports.plugin = plugin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwb3NlR2V0dGVyc1NldHRlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZXhwb3NlR2V0dGVyc1NldHRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFhQSxpQ0FBaUM7QUFDakMsdUNBQXNEO0FBRXRELE1BQU0sY0FBYyxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7QUFFM0MsTUFBTSxRQUFRLEdBQUcsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFDOUUsTUFBTSxRQUFRLEdBQUcsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7QUFDOUUsTUFBTSxXQUFXLEdBQUcsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7QUFFcEYscUVBQXFFO0FBQy9ELFFBQVMsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0FBQ3pCLFFBQVMsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0FBQ3pCLFdBQVksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0FBRWxDLFNBQVMsS0FBSyxDQUFDLElBQWtCLEVBQUUsR0FBRyxJQUFvQjtJQUN4RCxPQUFPLENBQUMsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3RDLENBQUM7QUFFRCxNQUFNLGtCQUFrQixHQUFHLEdBQUcscUJBQVcsb0JBQW9CLENBQUM7QUFFOUQsSUFBSSxhQUFhLEdBQUcsS0FBSyxDQUFDO0FBRTFCLE1BQU0sa0JBQWtCLEdBQUc7SUFDekIsWUFBWSxDQUFDLElBQThCO1FBQ3pDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssUUFBUSxFQUFFO1lB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