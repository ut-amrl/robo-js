import { CompilerOpts } from './types';
import { NodePath } from 'babel-traverse';
import * as t from 'babel-types';
export declare const runtimePath = "continuations/dist/runtime";
/**
 * Produces a string that represents the source location of `path`.
 *
 * @param functionName the name of the enclosing function
 * @param path the path of the node whose location to return
 * @param opts compiler options, for the source map
 */
export declare function locationString(functionName: string | undefined, path: NodePath<t.Node>, opts: CompilerOpts): string;
export declare type StopifyAnnotation = '@stopify flat';
export declare function isStopifyAnnotation(v: string): v is StopifyAnnotation;
export declare type FlatTag = 'NotFlat' | 'Flat';
export declare type FlatnessMark<T> = T & {
    mark: FlatTag;
};
