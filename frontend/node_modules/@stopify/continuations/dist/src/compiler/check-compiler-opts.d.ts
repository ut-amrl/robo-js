/**
 * This module contains functions to check and normalize compiler options.
 */
import { CompilerOpts } from '../types';
import { RawSourceMap } from 'source-map';
/**
 * If 'src.key' exists: (1) throws if 'pred(src.key)' is false then (2)
 * copies 'src.key' to 'dst.value'.
 */
export declare function copyProp(dst: any, src: any, key: string, pred: (value: any) => boolean, errorMessage: string): void;
/**
 * If 'src.key' exists: (1) applies 'f(src.key)', (2) throws if 'pred' does not
 * hold on the result, and (3) copies the result to 'dst.value'.
 */
export declare function transformProp(dst: any, src: any, key: string, f: (value: any) => any, pred: (value: any) => boolean, errorMessage: string): void;
/**
 * Given a partial 'CompilerOpts', fill in sensible defaults and dynamically
 * enforce type and value checks.
 *
 * @param value a 'CompilerOpts' with elided fields
 */
export declare function checkAndFillCompilerOpts(value: Partial<CompilerOpts>, sourceMap?: RawSourceMap): CompilerOpts;
