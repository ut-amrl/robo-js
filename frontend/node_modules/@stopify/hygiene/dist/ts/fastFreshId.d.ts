/**
 * This module generates fresh identifiers much faster than Babel's
 * own functions to do so.
 */
import { NodePath } from 'babel-traverse';
import * as t from 'babel-types';
export declare function plugin(): {
    visitor: {
        ReferencedIdentifier(path: NodePath<t.Identifier>): void;
        BindingIdentifier(path: NodePath<t.Identifier>): void;
    };
};
export declare function init(path: NodePath<t.Node>): void;
export declare function reset(): void;
export declare function fresh(base: string): t.Identifier;
export declare function nameExprBefore(path: NodePath<t.Node>, expr: t.Expression, base?: string): t.Identifier;
