"use strict";

const $__C = stopify.compiler;
var $__T = stopify;
var $__R = $__T.newRTS("catch");
var handleNew, array_map, array_filter, array_sort, map, filter, stopifyArrayPrototype, stopifyArray, fun00, fun01, fun02, fun03, fun04, fun05, fun06, fun07, fun08, fun09;
if ($__R.mode) handleNew = {
    box: undefined
};
if ($__R.mode) array_map = {
    box: undefined
};
if ($__R.mode) array_filter = {
    box: undefined
};
if ($__R.mode) array_sort = {
    box: undefined
};
if ($__R.mode) map = {
    box: undefined
};
if ($__R.mode) filter = {
    box: undefined
};
if ($__R.mode) stopifyArrayPrototype = {
    box: undefined
};
if ($__R.mode) stopifyArray = {
    box: undefined
};
if ($__R.mode) handleNew.box = function fun010(constr, ...args) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [result0, obj00, app1, app0] = $frame.locals;
    }

    try {
        var app0, app1, obj00, result0;
        if ($__R.mode) app0 = $__C.knownBuiltIns.includes(constr);

        if ($__R.mode && app0 || !$__R.mode && target === 1) {
            if ($__R.mode) {
                app1 = new constr(...args);
                $__R.remainingStack++;
            }

            return app1;
        }

        if ($__R.mode) obj00 = Object.create(constr.prototype);

        if ($__R.mode) {
            target = 3;
            result0 = constr.apply(obj00, args);
        } else if (target === 3) result0 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) $__R.remainingStack++;
        return typeof result0 === "object" ? result0 : obj00;
    } catch (exn0) {
        if (exn0 instanceof $__T.Capture) {
            exn0.stack.push({
                kind: "rest",
                f: fun010,
                index: target,
                locals: [result0, obj00, app1, app0],
                params: [constr, ...args],
                this: this
            });
        }

        throw exn0;
    }

    $__R.remainingStack++;
};
if ($__R.mode) array_map.box = function fun011(obj, callback, thisArg) {
    var target = null;
    var $frame = null;
    let materializedArguments = arguments;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [A, kValue, k, O, app2, app3, app4, T, len, mappedValue] = $frame.locals;
    }

    try {
        var T, A, k, app2, O, len, app3, kValue, mappedValue, app4;

        if ($__R.mode && obj === null || !$__R.mode && target === 4) {
            if ($__R.mode) {
                app2 = new TypeError('this is null or not defined');
                $__R.pushTrace("Line 8: in array_map");
            }

            throw app2;
        }
        // 1. Let O be the result of calling ToObject passing the |this|
        //    value as the argument.


        if ($__R.mode) {
            O = Object(obj);
            len = O.length >>> 0;
        }

        // 4. If IsCallable(callback) is false, throw a TypeError exception.
        // See: http://es5.github.com/#x9.11
        if ($__R.mode && typeof callback !== 'function' || !$__R.mode && target === 6) {
            if ($__R.mode) {
                app3 = new TypeError(callback + ' is not a function');
                $__R.pushTrace("Line 20: in array_map");
            }

            throw app3;
        }
        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.


        if ($__R.mode && arguments.length > 2) {
            if ($__R.mode) T = arguments[2];
        }
        // 6. Let A be a new array created as if by the expression new Array(len)
        //    where Array is the standard built-in constructor with that name and
        //    len is the value of len.


        if ($__R.mode) {
            A = new Array(len);

            k = 0;
        }

        // 8. Repeat, while k < len
        if ($__R.mode || !$__R.mode && target === 8) loop_break0: while ($__R.mode && k < len || !$__R.mode && target === 8) {
            if ($__R.mode || !$__R.mode && target === 8) loop_continue0: {
                // a. Let Pk be ToString(k).
                //   This is implicit for LHS operands of the in operator
                // b. Let kPresent be the result of calling the HasProperty internal
                //    method of O with argument Pk.
                //   This step can be combined with c
                // c. If kPresent is true, then
                if ($__R.mode && k in O || !$__R.mode && target === 8) {
                    // i. Let kValue be the result of calling the Get internal
                    //    method of O with argument Pk.
                    if ($__R.mode) kValue = O[k];
                    // ii. Let mappedValue be the result of calling the Call internal
                    //     method of callback with T as the this value and argument
                    //     list containing kValue, k, and O.

                    if ($__R.mode) {
                        target = 8;
                        app4 = callback.call(T, kValue, k, O);
                    } else if (target === 8) app4 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode) {
                        mappedValue = app4;

                        A[k] = mappedValue;
                    }
                }
                // d. Increase k by 1.


                if ($__R.mode) k++;
            }
        }
        // 9. return A

        if ($__R.mode) $__R.remainingStack++;
        return A;
    } catch (exn1) {
        if (exn1 instanceof $__T.Capture) {
            exn1.stack.push({
                kind: "rest",
                f: fun011,
                index: target,
                locals: [A, kValue, k, O, app2, app3, app4, T, len, mappedValue],
                params: materializedArguments,
                this: this
            });
        }

        throw exn1;
    }

    $__R.remainingStack++;
};
if ($__R.mode) array_filter.box = function fun012(obj, fun /*, thisArg*/) {
    var target = null;
    var $frame = null;
    let materializedArguments = arguments;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [res, val, i, t, app5, len, app6, app7, app8, thisArg] = $frame.locals;
    }

    try {
        'use strict';

        var app5, t, len, app6, res, thisArg, i, val, app7, app8;

        if ($__R.mode && (obj === void 0 || obj === null) || !$__R.mode && target === 9) {
            if ($__R.mode) {
                app5 = new TypeError();
                $__R.pushTrace("Line 75: in array_filter");
            }

            throw app5;
        }

        if ($__R.mode) {
            t = Object(obj);
            len = t.length >>> 0;
        }

        if ($__R.mode && typeof fun !== 'function' || !$__R.mode && target === 11) {
            if ($__R.mode) {
                app6 = new TypeError();
                $__R.pushTrace("Line 80: in array_filter");
            }

            throw app6;
        }

        if ($__R.mode) {
            res = [];
            thisArg = arguments.length >= 2 ? arguments[1] : void 0;
            i = 0;
        }

        if ($__R.mode || !$__R.mode && (target === 13 || target === 12)) loop_break1: while ($__R.mode && i < len || !$__R.mode && (target === 13 || target === 12)) {
            if ($__R.mode || !$__R.mode && (target === 13 || target === 12)) loop_continue1: {
                if ($__R.mode && i in t || !$__R.mode && (target === 13 || target === 12)) {
                    if ($__R.mode) val = t[i];
                    // NOTE: Technically this should Object.defineProperty at
                    //       the next index, as push can be affected by
                    //       properties on Object.prototype and Array.prototype.
                    //       But that method's new, and collisions should be
                    //       rare, so use the more-compatible alternative.

                    if ($__R.mode) {
                        target = 12;
                        app7 = fun.call(thisArg, val, i, t);
                    } else if (target === 12) app7 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode && app7 || !$__R.mode && target === 13) {
                        if ($__R.mode) {
                            target = 13;
                            app8 = res.push(val);
                        } else if (target === 13) app8 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
                    }
                }
            }
            if ($__R.mode) i++;
        }
        if ($__R.mode) $__R.remainingStack++;

        return res;
    } catch (exn2) {
        if (exn2 instanceof $__T.Capture) {
            exn2.stack.push({
                kind: "rest",
                f: fun012,
                index: target,
                locals: [res, val, i, t, app5, len, app6, app7, app8, thisArg],
                params: materializedArguments,
                this: this
            });
        }

        throw exn2;
    }

    $__R.remainingStack++;
};
if ($__R.mode) array_sort.box = function fun023(o, comparator) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [compact, compactSparse, compactSlow, app16, length, app17, stringComparator, app18, bucketSort, stringSort, min, comparatorSort, mergeSort, merge, array] = $frame.locals;
    }

    try {
        "use strict";

        var min, stringComparator, compactSparse, compactSlow, compact, merge, mergeSort, bucketSort, comparatorSort, stringSort, array, length, app16, app17, app18;

        if ($__R.mode) {
            min = {
                box: undefined
            };
            stringComparator = {
                box: undefined
            };
            compactSparse = {
                box: undefined
            };
            compactSlow = {
                box: undefined
            };
            compact = {
                box: undefined
            };
            merge = {
                box: undefined
            };
            mergeSort = {
                box: undefined
            };
            bucketSort = {
                box: undefined
            };
            comparatorSort = {
                box: undefined
            };
            stringSort = {
                box: undefined
            };

            min.box = function fun013(a, b) {
                return a < b ? a : b;
            };

            stringComparator.box = function fun014(a, b) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [aCharCode, bCharCode, length, aLength, bLength, i, aString, bString] = $frame.locals;
                }

                try {
                    var aString, bString, aLength, bLength, length, i, aCharCode, bCharCode;

                    if ($__R.mode) {
                        aString = a.string;
                        bString = b.string;
                        aLength = aString.length;
                        bLength = bString.length;
                        length = min.box(aLength, bLength);
                        i = 0;
                    }

                    if ($__R.mode || !$__R.mode && (target === 16 || target === 15)) loop_break2: while ($__R.mode && i < length || !$__R.mode && (target === 16 || target === 15)) {
                        if ($__R.mode || !$__R.mode && (target === 16 || target === 15)) loop_continue2: {
                            if ($__R.mode) {
                                target = 15;
                                aCharCode = aString.charCodeAt(i);
                            } else if (target === 15) aCharCode = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                            if ($__R.mode) {
                                target = 16;
                                bCharCode = bString.charCodeAt(i);
                            } else if (target === 16) bCharCode = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                            if ($__R.mode && aCharCode === bCharCode) {
                                break loop_continue2;
                            }

                            if ($__R.mode) $__R.remainingStack++;

                            return aCharCode - bCharCode;
                        }
                        if ($__R.mode) ++i;
                    }
                    if ($__R.mode) $__R.remainingStack++;

                    return aLength - bLength;
                } catch (exn3) {
                    if (exn3 instanceof $__T.Capture) {
                        exn3.stack.push({
                            kind: "rest",
                            f: fun014,
                            index: target,
                            locals: [aCharCode, bCharCode, length, aLength, bLength, i, aString, bString],
                            params: [a, b],
                            this: this
                        });
                    }

                    throw exn3;
                }

                $__R.remainingStack++;
            };

            compactSparse.box = function fun015(array, dst, src, length) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [i00, i, value, index, propertyNames, obj, seen, valueCount, undefinedCount] = $frame.locals;
                }

                try {
                    var seen, valueCount, undefinedCount, i00, obj, propertyNames, i, index, value, i;

                    if ($__R.mode) {
                        seen = {};
                        valueCount = 0;
                        undefinedCount = 0;
                        i00 = dst;

                        loop_break3: while ($__R.mode && i00 < src) {
                            if ($__R.mode) {
                                loop_continue3: {
                                    if ($__R.mode) delete array[i00];
                                }

                                ++i00;
                            }
                        }

                        obj = array;
                    }

                    if ($__R.mode || !$__R.mode && (target === 18 || target === 17)) loop_break4: while ($__R.mode && obj || !$__R.mode && (target === 18 || target === 17)) {
                        if ($__R.mode || !$__R.mode && target === 17) loop_continue4: {
                            if ($__R.mode) {
                                propertyNames = Object.getOwnPropertyNames(obj);
                                i = 0;

                                loop_break5: while ($__R.mode && i < propertyNames.length) {
                                    if ($__R.mode) {
                                        loop_continue6: {
                                            if ($__R.mode) index = propertyNames[i];

                                            if ($__R.mode && index < length) {
                                                // Exclude non-numeric properties and properties past length.
                                                if ($__R.mode && seen[index]) {
                                                    // Exclude duplicates.
                                                    break loop_continue6;
                                                }

                                                if ($__R.mode) {
                                                    seen[index] = 1;
                                                    value = array[index];

                                                    delete array[index];
                                                }

                                                if ($__R.mode && value === undefined) {
                                                    if ($__R.mode) ++undefinedCount;
                                                    break loop_continue6;
                                                }

                                                if ($__R.mode) array[valueCount++] = value;
                                            }
                                        }

                                        ++i;
                                    }
                                }
                            }
                        }
                        if ($__R.mode) obj = Object.getPrototypeOf(obj);
                    }

                    if ($__R.mode) {
                        i = valueCount;

                        loop_break6: while ($__R.mode && i < valueCount + undefinedCount) {
                            if ($__R.mode) {
                                loop_continue5: {
                                    if ($__R.mode) array[i] = undefined;
                                }

                                ++i;
                            }
                        }

                        $__R.remainingStack++;
                    }

                    return valueCount;
                } catch (exn4) {
                    if (exn4 instanceof $__T.Capture) {
                        exn4.stack.push({
                            kind: "rest",
                            f: fun015,
                            index: target,
                            locals: [i00, i, value, index, propertyNames, obj, seen, valueCount, undefinedCount],
                            params: [array, dst, src, length],
                            this: this
                        });
                    }

                    throw exn4;
                }

                $__R.remainingStack++;
            };

            compactSlow.box = function fun016(array, length) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [src, dst, i, holeCount, value, app9, valueCount, undefinedCount] = $frame.locals;
                }

                try {
                    var holeCount, dst, src, app9, value, valueCount, undefinedCount, i, i;

                    if ($__R.mode) {
                        holeCount = 0;
                        dst = 0, src = 0, void 0;
                    }

                    if ($__R.mode || !$__R.mode && target === 19) loop_break7: while ($__R.mode && src < length || !$__R.mode && target === 19) {
                        if ($__R.mode || !$__R.mode && target === 19) loop_continue7: {
                            if ($__R.mode && !(src in array) || !$__R.mode && target === 19) {
                                if ($__R.mode) ++holeCount;

                                if ($__R.mode && holeCount < 256) {
                                    break loop_continue7;
                                }

                                if ($__R.mode) {
                                    target = 19;
                                    app9 = compactSparse.box(array, dst, src, length);
                                } else if (target === 19) app9 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                                if ($__R.mode) $__R.remainingStack++;

                                return app9;
                            }

                            if ($__R.mode) value = array[src];

                            if ($__R.mode && value === undefined) {
                                break loop_continue7;
                            }

                            if ($__R.mode) array[dst++] = value;
                        }
                        if ($__R.mode) ++src;
                    }

                    if ($__R.mode) {
                        valueCount = dst;
                        undefinedCount = length - valueCount - holeCount;
                        i = valueCount;

                        loop_break8: while ($__R.mode && i < valueCount + undefinedCount) {
                            if ($__R.mode) {
                                loop_continue8: {
                                    if ($__R.mode) array[i] = undefined;
                                }

                                ++i;
                            }
                        }

                        i = valueCount + undefinedCount;

                        loop_break9: while ($__R.mode && i < length) {
                            if ($__R.mode) {
                                loop_continue9: {
                                    if ($__R.mode) delete array[i];
                                }

                                ++i;
                            }
                        }

                        $__R.remainingStack++;
                    }

                    return valueCount;
                } catch (exn5) {
                    if (exn5 instanceof $__T.Capture) {
                        exn5.stack.push({
                            kind: "rest",
                            f: fun016,
                            index: target,
                            locals: [src, dst, i, holeCount, value, app9, valueCount, undefinedCount],
                            params: [array, length],
                            this: this
                        });
                    }

                    throw exn5;
                }

                $__R.remainingStack++;
            };

            compact.box = function fun017(array, length) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [app10, i] = $frame.locals;
                }

                try {
                    var i, app10;
                    if ($__R.mode) i = 0;
                    if ($__R.mode || !$__R.mode && target === 20) loop_break10: while ($__R.mode && i < array.length || !$__R.mode && target === 20) {
                        if ($__R.mode || !$__R.mode && target === 20) loop_continue10: {
                            if ($__R.mode && array[i] === undefined || !$__R.mode && target === 20) {
                                if ($__R.mode) {
                                    target = 20;
                                    app10 = compactSlow.box(array, length);
                                } else if (target === 20) app10 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                                if ($__R.mode) $__R.remainingStack++;

                                return app10;
                            }
                        }
                        if ($__R.mode) ++i;
                    }
                    if ($__R.mode) $__R.remainingStack++;

                    return length;
                } catch (exn6) {
                    if (exn6 instanceof $__T.Capture) {
                        exn6.stack.push({
                            kind: "rest",
                            f: fun017,
                            index: target,
                            locals: [app10, i],
                            params: [array, length],
                            this: this
                        });
                    }

                    throw exn6;
                }

                $__R.remainingStack++;
            };

            merge.box = function fun018(dst, src, srcIndex, srcEnd, width, comparator) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [comparisonResult00, left, dstIndex, leftEnd, right, rightEnd] = $frame.locals;
                }

                try {
                    var left, leftEnd, right, rightEnd, dstIndex, comparisonResult00;

                    if ($__R.mode) {
                        left = srcIndex;
                        leftEnd = min.box(left + width, srcEnd);
                        right = leftEnd;
                        rightEnd = min.box(right + width, srcEnd);
                        dstIndex = left;
                    }

                    if ($__R.mode || !$__R.mode && target === 23) loop_break11: while ($__R.mode && dstIndex < rightEnd || !$__R.mode && target === 23) {
                        if ($__R.mode || !$__R.mode && target === 23) loop_continue11: {
                            if ($__R.mode && right < rightEnd || !$__R.mode && target === 23) {
                                if ($__R.mode && left >= leftEnd) {
                                    if ($__R.mode) dst[dstIndex] = src[right++];
                                    break loop_continue11;
                                }

                                if ($__R.mode) {
                                    target = 23;
                                    comparisonResult00 = comparator(src[right], src[left]);
                                } else if (target === 23) comparisonResult00 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                                if ($__R.mode && (typeof comparisonResult00 === "boolean" && !comparisonResult00 || comparisonResult00 < 0)) {
                                    if ($__R.mode) dst[dstIndex] = src[right++];
                                    break loop_continue11;
                                }
                            }

                            if ($__R.mode) dst[dstIndex] = src[left++];
                        }
                        if ($__R.mode) ++dstIndex;
                    }
                } catch (exn7) {
                    if (exn7 instanceof $__T.Capture) {
                        exn7.stack.push({
                            kind: "rest",
                            f: fun018,
                            index: target,
                            locals: [comparisonResult00, left, dstIndex, leftEnd, right, rightEnd],
                            params: [dst, src, srcIndex, srcEnd, width, comparator],
                            this: this
                        });
                    }

                    throw exn7;
                }

                $__R.remainingStack++;
            };

            mergeSort.box = function fun019(array, valueCount, comparator) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [buffer, app11, src, dst, width, i, srcIndex, tmp] = $frame.locals;
                }

                try {
                    var buffer, dst, src, width, srcIndex, app11, tmp, i;

                    if ($__R.mode) {
                        buffer = [];

                        buffer.length = valueCount;
                        dst = buffer;
                        src = array;
                        width = 1;
                    }

                    if ($__R.mode || !$__R.mode && target === 24) loop_break13: while ($__R.mode && width < valueCount || !$__R.mode && target === 24) {
                        if ($__R.mode || !$__R.mode && target === 24) loop_continue12: {
                            if ($__R.mode) srcIndex = 0;
                            if ($__R.mode || !$__R.mode && target === 24) loop_break14: while ($__R.mode && srcIndex < valueCount || !$__R.mode && target === 24) {
                                if ($__R.mode || !$__R.mode && target === 24) loop_continue14: {
                                    if ($__R.mode) {
                                        target = 24;
                                        app11 = merge.box(dst, src, srcIndex, valueCount, width, comparator);
                                    } else if (target === 24) app11 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
                                }
                                if ($__R.mode) srcIndex += 2 * width;
                            }

                            if ($__R.mode) {
                                tmp = src;

                                src = dst;
                                dst = tmp;
                            }
                        }
                        if ($__R.mode) width *= 2;
                    }

                    if ($__R.mode && src !== array) {
                        if ($__R.mode) {
                            i = 0;

                            loop_break12: while ($__R.mode && i < valueCount) {
                                if ($__R.mode) {
                                    loop_continue13: {
                                        if ($__R.mode) array[i] = src[i];
                                    }

                                    i++;
                                }
                            }
                        }
                    }
                } catch (exn8) {
                    if (exn8 instanceof $__T.Capture) {
                        exn8.stack.push({
                            kind: "rest",
                            f: fun019,
                            index: target,
                            locals: [buffer, app11, src, dst, width, i, srcIndex, tmp],
                            params: [array, valueCount, comparator],
                            this: this
                        });
                    }

                    throw exn8;
                }

                $__R.remainingStack++;
            };

            bucketSort.box = function fun020(array, dst, bucket, depth) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [app12, app13, c, i, buckets, string, entry] = $frame.locals;
                }

                try {
                    var app12, i, buckets, i, entry, string, c, i, app13;

                    if ($__R.mode && (bucket.length < 32 || depth > 32) || !$__R.mode && target === 25) {
                        if ($__R.mode) {
                            target = 25;
                            app12 = mergeSort.box(bucket, bucket.length, stringComparator.box);
                        } else if (target === 25) app12 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                        if ($__R.mode) {
                            i = 0;

                            loop_break15: while ($__R.mode && i < bucket.length) {
                                if ($__R.mode) {
                                    loop_continue15: {
                                        if ($__R.mode) array[dst++] = bucket[i].value;
                                    }

                                    ++i;
                                }
                            }

                            $__R.remainingStack++;
                        }

                        return dst;
                    }

                    if ($__R.mode) {
                        buckets = [];
                        i = 0;
                    }

                    if ($__R.mode || !$__R.mode && target === 26) loop_break16: while ($__R.mode && i < bucket.length || !$__R.mode && target === 26) {
                        if ($__R.mode || !$__R.mode && target === 26) loop_continue16: {
                            if ($__R.mode) {
                                entry = bucket[i];
                                string = entry.string;
                            }

                            if ($__R.mode && string.length === depth) {
                                if ($__R.mode) array[dst++] = entry.value;
                                break loop_continue16;
                            }

                            if ($__R.mode) {
                                target = 26;
                                c = string.charCodeAt(depth);
                            } else if (target === 26) c = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                            if ($__R.mode && !buckets[c]) {
                                if ($__R.mode) buckets[c] = [];
                            }

                            if ($__R.mode) buckets[c][buckets[c].length] = entry;
                        }
                        if ($__R.mode) ++i;
                    }
                    if ($__R.mode) i = 0;
                    if ($__R.mode || !$__R.mode && target === 27) loop_break17: while ($__R.mode && i < buckets.length || !$__R.mode && target === 27) {
                        if ($__R.mode || !$__R.mode && target === 27) loop_continue17: {
                            if ($__R.mode && !buckets[i]) {
                                break loop_continue17;
                            }

                            if ($__R.mode) {
                                target = 27;
                                app13 = bucketSort.box(array, dst, buckets[i], depth + 1);
                            } else if (target === 27) app13 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                            if ($__R.mode) dst = app13;
                        }
                        if ($__R.mode) ++i;
                    }
                    if ($__R.mode) $__R.remainingStack++;

                    return dst;
                } catch (exn9) {
                    if (exn9 instanceof $__T.Capture) {
                        exn9.stack.push({
                            kind: "rest",
                            f: fun020,
                            index: target,
                            locals: [app12, app13, c, i, buckets, string, entry],
                            params: [array, dst, bucket, depth],
                            this: this
                        });
                    }

                    throw exn9;
                }

                $__R.remainingStack++;
            };

            comparatorSort.box = function fun021(array, length, comparator) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [app14, valueCount] = $frame.locals;
                }

                try {
                    var valueCount, app14;

                    if ($__R.mode) {
                        target = 28;
                        valueCount = compact.box(array, length);
                    } else if (target === 28) valueCount = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode) {
                        target = 29;
                        app14 = mergeSort.box(array, valueCount, comparator);
                    } else if (target === 29) app14 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
                } catch (exn10) {
                    if (exn10 instanceof $__T.Capture) {
                        exn10.stack.push({
                            kind: "rest",
                            f: fun021,
                            index: target,
                            locals: [app14, valueCount],
                            params: [array, length, comparator],
                            this: this
                        });
                    }

                    throw exn10;
                }

                $__R.remainingStack++;
            };

            stringSort.box = function fun022(array, length) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [app15, i, strings, valueCount] = $frame.locals;
                }

                try {
                    var valueCount, strings, i, app15;

                    if ($__R.mode) {
                        target = 30;
                        valueCount = compact.box(array, length);
                    } else if (target === 30) valueCount = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode) {
                        strings = new Array(valueCount);
                        i = 0;

                        loop_break18: while ($__R.mode && i < valueCount) {
                            if ($__R.mode) {
                                loop_continue18: {
                                    if ($__R.mode) strings[i] = { string: array[i], value: array[i] };
                                }

                                ++i;
                            }
                        }
                    }

                    if ($__R.mode) {
                        target = 32;
                        app15 = bucketSort.box(array, 0, strings, 0);
                    } else if (target === 32) app15 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
                } catch (exn11) {
                    if (exn11 instanceof $__T.Capture) {
                        exn11.stack.push({
                            kind: "rest",
                            f: fun022,
                            index: target,
                            locals: [app15, i, strings, valueCount],
                            params: [array, length],
                            this: this
                        });
                    }

                    throw exn11;
                }

                $__R.remainingStack++;
            };

            array = o;
            length = array.length >>> 0;
        }

        // For compatibility with Firefox and Chrome, do nothing observable
        // to the target array if it has 0 or 1 sortable properties.
        if ($__R.mode && length < 2) {
            if ($__R.mode) $__R.remainingStack++;

            return array;
        }

        if ($__R.mode && typeof comparator === "function" || !$__R.mode && target === 33) {
            if ($__R.mode) {
                target = 33;
                app16 = comparatorSort.box(array, length, comparator);
            } else if (target === 33) app16 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
        } else if ($__R.mode || !$__R.mode && (target === 35 || target === 34)) {
            if ($__R.mode && (comparator === null || comparator === undefined) || !$__R.mode && target === 34) {
                if ($__R.mode) {
                    target = 34;
                    app17 = stringSort.box(array, length);
                } else if (target === 34) app17 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
            } else if ($__R.mode || !$__R.mode && target === 35) {
                if ($__R.mode) {
                    app18 = new TypeError("Array.prototype.sort requires the comparsion function be a function or undefined");
                    $__R.pushTrace("Line 283: in array_sort");
                }

                throw app18;
            }
        }

        if ($__R.mode) $__R.remainingStack++;

        return array;
    } catch (exn12) {
        if (exn12 instanceof $__T.Capture) {
            exn12.stack.push({
                kind: "rest",
                f: fun023,
                index: target,
                locals: [compact, compactSparse, compactSlow, app16, length, app17, stringComparator, app18, bucketSort, stringSort, min, comparatorSort, mergeSort, merge, array],
                params: [o, comparator],
                this: this
            });
        }

        throw exn12;
    }

    $__R.remainingStack++;
};
if ($__R.mode) map.box = function fun024(o, ...args) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app20, app19] = $frame.locals;
    }

    try {
        var app19, app20;

        if ($__R.mode && o instanceof Array || !$__R.mode && target === 36) {
            if ($__R.mode) {
                target = 36;
                app19 = array_map.box(o, args[0], args[1]);
            } else if (target === 36) app19 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

            if ($__R.mode) $__R.remainingStack++;

            return app19;
        } else if ($__R.mode || !$__R.mode && target === 37) {
            if ($__R.mode) {
                target = 37;
                app20 = o.map.call(o, ...args);
            } else if (target === 37) app20 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

            if ($__R.mode) $__R.remainingStack++;

            return app20;
        }
    } catch (exn13) {
        if (exn13 instanceof $__T.Capture) {
            exn13.stack.push({
                kind: "rest",
                f: fun024,
                index: target,
                locals: [app20, app19],
                params: [o, ...args],
                this: this
            });
        }

        throw exn13;
    }

    $__R.remainingStack++;
};
if ($__R.mode) filter.box = function fun025(o, args) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app22, app21] = $frame.locals;
    }

    try {
        var app21, app22;

        if ($__R.mode && o instanceof Array || !$__R.mode && target === 38) {
            if ($__R.mode) {
                target = 38;
                app21 = array_filter.box(o, args);
            } else if (target === 38) app21 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

            if ($__R.mode) $__R.remainingStack++;

            return app21;
        } else if ($__R.mode || !$__R.mode && target === 39) {
            if ($__R.mode) {
                target = 39;
                app22 = o.filter.call(o, args);
            } else if (target === 39) app22 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

            if ($__R.mode) $__R.remainingStack++;

            return app22;
        }
    } catch (exn14) {
        if (exn14 instanceof $__T.Capture) {
            exn14.stack.push({
                kind: "rest",
                f: fun025,
                index: target,
                locals: [app22, app21],
                params: [o, args],
                this: this
            });
        }

        throw exn14;
    }

    $__R.remainingStack++;
};
if ($__R.mode) stopifyArray.box = function fun026(arr) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app23] = $frame.locals;
    }

    try {
        var app23;

        if ($__R.mode) {
            target = 40;
            app23 = Reflect.setPrototypeOf(arr, stopifyArrayPrototype.box);
        } else if (target === 40) app23 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
        // @stopify flat


        if ($__R.mode) $__R.remainingStack++;

        return arr;
    } catch (exn15) {
        if (exn15 instanceof $__T.Capture) {
            exn15.stack.push({
                kind: "rest",
                f: fun026,
                index: target,
                locals: [app23],
                params: [arr],
                this: this
            });
        }

        throw exn15;
    }

    $__R.remainingStack++;
};
if ($__R.mode) Object.defineProperty(exports, "__esModule", { value: true });
// Do not directly use this file. We stopify and webpack this file for each
// type of transformation.

if ($__R.mode) exports.map = map.box;
if ($__R.mode) exports.filter = filter.box;
if ($__R.mode) fun00 = function funExpr0(f) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app24, arg00] = $frame.locals;
    }

    try {
        var arg00, app24;

        if ($__R.mode) {
            target = 42;
            arg00 = map.box(this, f, this);
        } else if (target === 42) arg00 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) {
            target = 43;
            app24 = stopifyArray.box(arg00);
        } else if (target === 43) app24 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) $__R.remainingStack++;
        return app24;
    } catch (exn16) {
        if (exn16 instanceof $__T.Capture) {
            exn16.stack.push({
                kind: "rest",
                f: funExpr0,
                index: target,
                locals: [app24, arg00],
                params: [f],
                this: this
            });
        }

        throw exn16;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun01 = function funExpr1(f) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app25, arg01] = $frame.locals;
    }

    try {
        var arg01, app25;

        if ($__R.mode) {
            target = 44;
            arg01 = filter.box(this, f);
        } else if (target === 44) arg01 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) {
            target = 45;
            app25 = stopifyArray.box(arg01);
        } else if (target === 45) app25 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) $__R.remainingStack++;
        return app25;
    } catch (exn17) {
        if (exn17 instanceof $__T.Capture) {
            exn17.stack.push({
                kind: "rest",
                f: funExpr1,
                index: target,
                locals: [app25, arg01],
                params: [f],
                this: this
            });
        }

        throw exn17;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun02 = function funExpr2(f, init) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app26, i, acc, arrLen] = $frame.locals;
    }

    try {
        var arrLen, acc, i, app26;

        if ($__R.mode) {
            arrLen = this.length;
            acc = arguments.length === 1 ? this[arrLen - 1] : init;
            i = arguments.length === 1 ? arrLen - 2 : arrLen - 1;
        }

        if ($__R.mode || !$__R.mode && target === 46) loop_break19: while ($__R.mode && i >= 0 || !$__R.mode && target === 46) {
            if ($__R.mode || !$__R.mode && target === 46) loop_continue19: {
                if ($__R.mode) {
                    target = 46;
                    app26 = f(acc, this[i], i, this);
                } else if (target === 46) app26 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode) {
                    acc = app26;
                    i = i - 1;
                }
            }
        }
        if ($__R.mode) $__R.remainingStack++;

        return acc;
    } catch (exn18) {
        if (exn18 instanceof $__T.Capture) {
            exn18.stack.push({
                kind: "rest",
                f: funExpr2,
                index: target,
                locals: [app26, i, acc, arrLen],
                params: [f, init],
                this: this
            });
        }

        throw exn18;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun03 = function funExpr3(f, init) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app27, i, bound, arrLen, acc] = $frame.locals;
    }

    try {
        var arrLen, acc, bound, i, app27;

        if ($__R.mode) {
            arrLen = this.length;
            acc = arguments.length === 1 ? this[arrLen - 1] : init;
            bound = arguments.length === 1 ? arrLen - 1 : arrLen;
            i = 0;
        }

        if ($__R.mode || !$__R.mode && target === 47) loop_break20: while ($__R.mode && i < bound || !$__R.mode && target === 47) {
            if ($__R.mode || !$__R.mode && target === 47) loop_continue20: {
                if ($__R.mode) {
                    target = 47;
                    app27 = f(acc, this[i], i, this);
                } else if (target === 47) app27 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode) {
                    acc = app27;
                    i = i + 1;
                }
            }
        }
        if ($__R.mode) $__R.remainingStack++;

        return acc;
    } catch (exn19) {
        if (exn19 instanceof $__T.Capture) {
            exn19.stack.push({
                kind: "rest",
                f: funExpr3,
                index: target,
                locals: [app27, i, bound, arrLen, acc],
                params: [f, init],
                this: this
            });
        }

        throw exn19;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun04 = function funExpr4(pred) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app28, l, i] = $frame.locals;
    }

    try {
        var i, l, app28;

        if ($__R.mode) {
            i = 0;
            l = this.length;
        }

        if ($__R.mode || !$__R.mode && target === 48) loop_break21: while ($__R.mode && i < l || !$__R.mode && target === 48) {
            if ($__R.mode || !$__R.mode && target === 48) loop_continue21: {
                if ($__R.mode) {
                    target = 48;
                    app28 = pred(this[i]);
                } else if (target === 48) app28 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode && app28) {
                    if ($__R.mode) $__R.remainingStack++;

                    return true;
                }

                if ($__R.mode) i = i + 1;
            }
        }
        if ($__R.mode) $__R.remainingStack++;

        return false;
    } catch (exn20) {
        if (exn20 instanceof $__T.Capture) {
            exn20.stack.push({
                kind: "rest",
                f: funExpr4,
                index: target,
                locals: [app28, l, i],
                params: [pred],
                this: this
            });
        }

        throw exn20;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun05 = function funExpr5(pred) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app29, l, i] = $frame.locals;
    }

    try {
        var i, l, app29;

        if ($__R.mode) {
            i = 0;
            l = this.length;
        }

        if ($__R.mode || !$__R.mode && target === 49) loop_break22: while ($__R.mode && i < l || !$__R.mode && target === 49) {
            if ($__R.mode || !$__R.mode && target === 49) loop_continue22: {
                if ($__R.mode) {
                    target = 49;
                    app29 = pred(this[i]);
                } else if (target === 49) app29 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode && !app29) {
                    if ($__R.mode) $__R.remainingStack++;

                    return false;
                }

                if ($__R.mode) i = i + 1;
            }
        }
        if ($__R.mode) $__R.remainingStack++;

        return true;
    } catch (exn21) {
        if (exn21 instanceof $__T.Capture) {
            exn21.stack.push({
                kind: "rest",
                f: funExpr5,
                index: target,
                locals: [app29, l, i],
                params: [pred],
                this: this
            });
        }

        throw exn21;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun06 = function funExpr6(pred) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app30, l, i] = $frame.locals;
    }

    try {
        var i, l, app30;

        if ($__R.mode) {
            i = 0;
            l = this.length;
        }

        if ($__R.mode || !$__R.mode && target === 50) loop_break23: while ($__R.mode && i < l || !$__R.mode && target === 50) {
            if ($__R.mode || !$__R.mode && target === 50) loop_continue23: {
                if ($__R.mode) {
                    target = 50;
                    app30 = pred(this[i]);
                } else if (target === 50) app30 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode && app30) {
                    if ($__R.mode) $__R.remainingStack++;

                    return this[i];
                }

                if ($__R.mode) i = i + 1;
            }
        }
    } catch (exn22) {
        if (exn22 instanceof $__T.Capture) {
            exn22.stack.push({
                kind: "rest",
                f: funExpr6,
                index: target,
                locals: [app30, l, i],
                params: [pred],
                this: this
            });
        }

        throw exn22;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun07 = function funExpr7(pred) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app31, l, i] = $frame.locals;
    }

    try {
        var i, l, app31;

        if ($__R.mode) {
            i = 0;
            l = this.length;
        }

        if ($__R.mode || !$__R.mode && target === 51) loop_break24: while ($__R.mode && i < l || !$__R.mode && target === 51) {
            if ($__R.mode || !$__R.mode && target === 51) loop_continue24: {
                if ($__R.mode) {
                    target = 51;
                    app31 = pred(this[i]);
                } else if (target === 51) app31 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode && app31) {
                    if ($__R.mode) $__R.remainingStack++;

                    return i;
                }

                if ($__R.mode) i = i + 1;
            }
        }
        if ($__R.mode) $__R.remainingStack++;

        return -1;
    } catch (exn23) {
        if (exn23 instanceof $__T.Capture) {
            exn23.stack.push({
                kind: "rest",
                f: funExpr7,
                index: target,
                locals: [app31, l, i],
                params: [pred],
                this: this
            });
        }

        throw exn23;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun08 = function method0(f) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app32, l, i] = $frame.locals;
    }

    try {
        var i, l, app32;

        if ($__R.mode) {
            i = 0;
            l = this.length;
        }

        if ($__R.mode || !$__R.mode && target === 52) loop_break25: while ($__R.mode && i < l || !$__R.mode && target === 52) {
            if ($__R.mode || !$__R.mode && target === 52) loop_continue25: {
                if ($__R.mode) {
                    target = 52;
                    app32 = f(this[i], i, this);
                } else if (target === 52) app32 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode) i = i + 1;
            }
        }
    } catch (exn24) {
        if (exn24 instanceof $__T.Capture) {
            exn24.stack.push({
                kind: "rest",
                f: method0,
                index: target,
                locals: [app32, l, i],
                params: [f],
                this: this
            });
        }

        throw exn24;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun09 = function funExpr8(comparator) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app33, arg02] = $frame.locals;
    }

    try {
        var arg02, app33;

        if ($__R.mode) {
            target = 53;
            arg02 = array_sort.box(this, comparator);
        } else if (target === 53) arg02 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) {
            target = 54;
            app33 = stopifyArray.box(arg02);
        } else if (target === 54) app33 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) $__R.remainingStack++;

        return app33;
    } catch (exn25) {
        if (exn25 instanceof $__T.Capture) {
            exn25.stack.push({
                kind: "rest",
                f: funExpr8,
                index: target,
                locals: [app33, arg02],
                params: [comparator],
                this: this
            });
        }

        throw exn25;
    }

    $__R.remainingStack++;
};
if ($__R.mode) stopifyArrayPrototype.box = {
    __proto__: Array.prototype,
    map: fun00,
    filter: fun01,
    reduceRight: fun02,
    reduce: fun03,
    // NOTE(arjun): thisArg ignored
    some: fun04,
    every: fun05,
    find: fun06,
    findIndex: fun07,
    // NOTE(arjun): Ignores thisArg
    forEach: fun08,

    sort: fun09
};
if ($__R.mode) exports.stopifyArray = stopifyArray.box;