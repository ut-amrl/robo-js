"use strict";

const $__C = stopify.compiler;
var $__T = stopify;
var $__R = $__T.newRTS("retval");
var handleNew, array_map, array_filter, array_sort, map, filter, stopifyArrayPrototype, stopifyArray, fun00, fun01, fun02, fun03, fun04, fun05, fun06, fun07, fun08, fun09;
if ($__R.mode) handleNew = {
    box: undefined
};
if ($__R.mode) array_map = {
    box: undefined
};
if ($__R.mode) array_filter = {
    box: undefined
};
if ($__R.mode) array_sort = {
    box: undefined
};
if ($__R.mode) map = {
    box: undefined
};
if ($__R.mode) filter = {
    box: undefined
};
if ($__R.mode) stopifyArrayPrototype = {
    box: undefined
};
if ($__R.mode) stopifyArray = {
    box: undefined
};
if ($__R.mode) handleNew.box = function fun010(constr, ...args) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [result0, obj00, app1, app0] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [result0, obj00, app1, app0];
    }

    var restoreNextFrame = () => {
        return fun010.call(this, constr, ...args);
    };

    var app0, app1, obj00, result0;
    if ($__R.mode) app0 = $__C.knownBuiltIns.includes(constr);

    if ($__R.mode && app0 || !$__R.mode && target === 1) {
        if ($__R.mode) {
            app1 = new constr(...args);
            $__R.remainingStack++;
        }

        return app1;
    }

    if ($__R.mode) obj00 = Object.create(constr.prototype);

    if ($__R.mode || target === 3) {
        if ($__R.mode) result0 = constr.apply(obj00, args);else if (target === 3) result0 = $__R.stack[$__R.stack.length - 1].f();

        if (result0 instanceof $__T.Capture) {
            result0.stack.push({
                kind: "rest",
                f: restoreNextFrame,
                index: 3,
                this: this
            });
            captureLocals(result0.stack[result0.stack.length - 1]);
            return result0;
        }
    }

    if ($__R.mode) $__R.remainingStack++;
    return typeof result0 === "object" ? result0 : obj00;
    $__R.remainingStack++;
};
if ($__R.mode) array_map.box = function fun011(obj, callback, thisArg) {
    var target = null;
    var $frame = null;
    let materializedArguments = arguments;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [A, kValue, k, O, app2, app3, app4, T, len, mappedValue] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [A, kValue, k, O, app2, app3, app4, T, len, mappedValue];
    }

    var restoreNextFrame = () => {
        materializedArguments.length = Object.keys(materializedArguments).length;
        return fun011.apply(this, materializedArguments);
    };

    var T, A, k, app2, O, len, app3, kValue, mappedValue, app4;

    if ($__R.mode && obj === null || !$__R.mode && target === 4) {
        if ($__R.mode) {
            app2 = new TypeError('this is null or not defined');
            $__R.pushTrace("Line 8: in array_map");
        }

        throw app2;
    }
    // 1. Let O be the result of calling ToObject passing the |this|
    //    value as the argument.


    if ($__R.mode) {
        O = Object(obj);
        len = O.length >>> 0;
    }

    // 4. If IsCallable(callback) is false, throw a TypeError exception.
    // See: http://es5.github.com/#x9.11
    if ($__R.mode && typeof callback !== 'function' || !$__R.mode && target === 6) {
        if ($__R.mode) {
            app3 = new TypeError(callback + ' is not a function');
            $__R.pushTrace("Line 20: in array_map");
        }

        throw app3;
    }
    // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.


    if ($__R.mode && arguments.length > 2) {
        if ($__R.mode) T = arguments[2];
    }
    // 6. Let A be a new array created as if by the expression new Array(len)
    //    where Array is the standard built-in constructor with that name and
    //    len is the value of len.


    if ($__R.mode) {
        A = new Array(len);

        k = 0;
    }

    // 8. Repeat, while k < len
    if ($__R.mode || !$__R.mode && target === 8) loop_break0: while ($__R.mode && k < len || !$__R.mode && target === 8) {
        if ($__R.mode || !$__R.mode && target === 8) loop_continue0: {
            // a. Let Pk be ToString(k).
            //   This is implicit for LHS operands of the in operator
            // b. Let kPresent be the result of calling the HasProperty internal
            //    method of O with argument Pk.
            //   This step can be combined with c
            // c. If kPresent is true, then
            if ($__R.mode && k in O || !$__R.mode && target === 8) {
                // i. Let kValue be the result of calling the Get internal
                //    method of O with argument Pk.
                if ($__R.mode) kValue = O[k];
                // ii. Let mappedValue be the result of calling the Call internal
                //     method of callback with T as the this value and argument
                //     list containing kValue, k, and O.

                if ($__R.mode || target === 8) {
                    if ($__R.mode) app4 = callback.call(T, kValue, k, O);else if (target === 8) app4 = $__R.stack[$__R.stack.length - 1].f();

                    if (app4 instanceof $__T.Capture) {
                        app4.stack.push({
                            kind: "rest",
                            f: restoreNextFrame,
                            index: 8,
                            this: this
                        });
                        captureLocals(app4.stack[app4.stack.length - 1]);
                        return app4;
                    }
                }

                if ($__R.mode) {
                    mappedValue = app4;

                    A[k] = mappedValue;
                }
            }
            // d. Increase k by 1.


            if ($__R.mode) k++;
        }
    }
    // 9. return A

    if ($__R.mode) $__R.remainingStack++;
    return A;
    $__R.remainingStack++;
};
if ($__R.mode) array_filter.box = function fun012(obj, fun /*, thisArg*/) {
    'use strict';

    var target = null;
    var $frame = null;
    let materializedArguments = arguments;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [res, val, i, t, app5, len, app6, app7, app8, thisArg] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [res, val, i, t, app5, len, app6, app7, app8, thisArg];
    }

    var restoreNextFrame = () => {
        materializedArguments.length = Object.keys(materializedArguments).length;
        return fun012.apply(this, materializedArguments);
    };

    var app5, t, len, app6, res, thisArg, i, val, app7, app8;

    if ($__R.mode && (obj === void 0 || obj === null) || !$__R.mode && target === 9) {
        if ($__R.mode) {
            app5 = new TypeError();
            $__R.pushTrace("Line 75: in array_filter");
        }

        throw app5;
    }

    if ($__R.mode) {
        t = Object(obj);
        len = t.length >>> 0;
    }

    if ($__R.mode && typeof fun !== 'function' || !$__R.mode && target === 11) {
        if ($__R.mode) {
            app6 = new TypeError();
            $__R.pushTrace("Line 80: in array_filter");
        }

        throw app6;
    }

    if ($__R.mode) {
        res = [];
        thisArg = arguments.length >= 2 ? arguments[1] : void 0;
        i = 0;
    }

    if ($__R.mode || !$__R.mode && (target === 13 || target === 12)) loop_break1: while ($__R.mode && i < len || !$__R.mode && (target === 13 || target === 12)) {
        if ($__R.mode || !$__R.mode && (target === 13 || target === 12)) loop_continue1: {
            if ($__R.mode && i in t || !$__R.mode && (target === 13 || target === 12)) {
                if ($__R.mode) val = t[i];
                // NOTE: Technically this should Object.defineProperty at
                //       the next index, as push can be affected by
                //       properties on Object.prototype and Array.prototype.
                //       But that method's new, and collisions should be
                //       rare, so use the more-compatible alternative.

                if ($__R.mode || target === 12) {
                    if ($__R.mode) app7 = fun.call(thisArg, val, i, t);else if (target === 12) app7 = $__R.stack[$__R.stack.length - 1].f();

                    if (app7 instanceof $__T.Capture) {
                        app7.stack.push({
                            kind: "rest",
                            f: restoreNextFrame,
                            index: 12,
                            this: this
                        });
                        captureLocals(app7.stack[app7.stack.length - 1]);
                        return app7;
                    }
                }

                if ($__R.mode && app7 || !$__R.mode && target === 13) {
                    if ($__R.mode || target === 13) {
                        if ($__R.mode) app8 = res.push(val);else if (target === 13) app8 = $__R.stack[$__R.stack.length - 1].f();

                        if (app8 instanceof $__T.Capture) {
                            app8.stack.push({
                                kind: "rest",
                                f: restoreNextFrame,
                                index: 13,
                                this: this
                            });
                            captureLocals(app8.stack[app8.stack.length - 1]);
                            return app8;
                        }
                    }
                }
            }
        }
        if ($__R.mode) i++;
    }
    if ($__R.mode) $__R.remainingStack++;

    return res;
    $__R.remainingStack++;
};
if ($__R.mode) array_sort.box = function fun023(o, comparator) {
    "use strict";

    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [compact, compactSparse, app14, compactSlow, app15, app16, length, stringComparator, bucketSort, stringSort, min, comparatorSort, mergeSort, merge, array] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [compact, compactSparse, app14, compactSlow, app15, app16, length, stringComparator, bucketSort, stringSort, min, comparatorSort, mergeSort, merge, array];
    }

    var restoreNextFrame = () => {
        return fun023.call(this, o, comparator);
    };

    var min, stringComparator, compactSparse, compactSlow, compact, merge, mergeSort, bucketSort, comparatorSort, stringSort, array, length, app14, app15, app16;

    if ($__R.mode) {
        min = {
            box: undefined
        };
        stringComparator = {
            box: undefined
        };
        compactSparse = {
            box: undefined
        };
        compactSlow = {
            box: undefined
        };
        compact = {
            box: undefined
        };
        merge = {
            box: undefined
        };
        mergeSort = {
            box: undefined
        };
        bucketSort = {
            box: undefined
        };
        comparatorSort = {
            box: undefined
        };
        stringSort = {
            box: undefined
        };

        min.box = function fun013(a, b) {
            return a < b ? a : b;
        };

        stringComparator.box = function fun014(a, b) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [aCharCode, bCharCode, length, aLength, bLength, i, aString, bString] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [aCharCode, bCharCode, length, aLength, bLength, i, aString, bString];
            }

            var restoreNextFrame = () => {
                return fun014.call(this, a, b);
            };

            var aString, bString, aLength, bLength, length, i, aCharCode, bCharCode;

            if ($__R.mode) {
                aString = a.string;
                bString = b.string;
                aLength = aString.length;
                bLength = bString.length;
                length = min.box(aLength, bLength);
                i = 0;
            }

            if ($__R.mode || !$__R.mode && (target === 16 || target === 15)) loop_break2: while ($__R.mode && i < length || !$__R.mode && (target === 16 || target === 15)) {
                if ($__R.mode || !$__R.mode && (target === 16 || target === 15)) loop_continue2: {
                    if ($__R.mode || target === 15) {
                        if ($__R.mode) aCharCode = aString.charCodeAt(i);else if (target === 15) aCharCode = $__R.stack[$__R.stack.length - 1].f();

                        if (aCharCode instanceof $__T.Capture) {
                            aCharCode.stack.push({
                                kind: "rest",
                                f: restoreNextFrame,
                                index: 15,
                                this: this
                            });
                            captureLocals(aCharCode.stack[aCharCode.stack.length - 1]);
                            return aCharCode;
                        }
                    }

                    if ($__R.mode || target === 16) {
                        if ($__R.mode) bCharCode = bString.charCodeAt(i);else if (target === 16) bCharCode = $__R.stack[$__R.stack.length - 1].f();

                        if (bCharCode instanceof $__T.Capture) {
                            bCharCode.stack.push({
                                kind: "rest",
                                f: restoreNextFrame,
                                index: 16,
                                this: this
                            });
                            captureLocals(bCharCode.stack[bCharCode.stack.length - 1]);
                            return bCharCode;
                        }
                    }

                    if ($__R.mode && aCharCode === bCharCode) {
                        break loop_continue2;
                    }

                    if ($__R.mode) $__R.remainingStack++;

                    return aCharCode - bCharCode;
                }
                if ($__R.mode) ++i;
            }
            if ($__R.mode) $__R.remainingStack++;

            return aLength - bLength;
            $__R.remainingStack++;
        };

        compactSparse.box = function fun015(array, dst, src, length) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [i00, i, value, index, propertyNames, obj, seen, valueCount, undefinedCount] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [i00, i, value, index, propertyNames, obj, seen, valueCount, undefinedCount];
            }

            var restoreNextFrame = () => {
                return fun015.call(this, array, dst, src, length);
            };

            var seen, valueCount, undefinedCount, i00, obj, propertyNames, i, index, value, i;

            if ($__R.mode) {
                seen = {};
                valueCount = 0;
                undefinedCount = 0;
                i00 = dst;

                loop_break3: while ($__R.mode && i00 < src) {
                    if ($__R.mode) {
                        loop_continue3: {
                            if ($__R.mode) delete array[i00];
                        }

                        ++i00;
                    }
                }

                obj = array;
            }

            if ($__R.mode || !$__R.mode && (target === 18 || target === 17)) loop_break4: while ($__R.mode && obj || !$__R.mode && (target === 18 || target === 17)) {
                if ($__R.mode || !$__R.mode && target === 17) loop_continue4: {
                    if ($__R.mode) {
                        propertyNames = Object.getOwnPropertyNames(obj);
                        i = 0;

                        loop_break5: while ($__R.mode && i < propertyNames.length) {
                            if ($__R.mode) {
                                loop_continue6: {
                                    if ($__R.mode) index = propertyNames[i];

                                    if ($__R.mode && index < length) {
                                        // Exclude non-numeric properties and properties past length.
                                        if ($__R.mode && seen[index]) {
                                            // Exclude duplicates.
                                            break loop_continue6;
                                        }

                                        if ($__R.mode) {
                                            seen[index] = 1;
                                            value = array[index];

                                            delete array[index];
                                        }

                                        if ($__R.mode && value === undefined) {
                                            if ($__R.mode) ++undefinedCount;
                                            break loop_continue6;
                                        }

                                        if ($__R.mode) array[valueCount++] = value;
                                    }
                                }

                                ++i;
                            }
                        }
                    }
                }
                if ($__R.mode) obj = Object.getPrototypeOf(obj);
            }

            if ($__R.mode) {
                i = valueCount;

                loop_break6: while ($__R.mode && i < valueCount + undefinedCount) {
                    if ($__R.mode) {
                        loop_continue5: {
                            if ($__R.mode) array[i] = undefined;
                        }

                        ++i;
                    }
                }

                $__R.remainingStack++;
            }

            return valueCount;
            $__R.remainingStack++;
        };

        compactSlow.box = function fun016(array, length) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [src, dst, i, holeCount, value, valueCount, undefinedCount] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [src, dst, i, holeCount, value, valueCount, undefinedCount];
            }

            var restoreNextFrame = () => {
                return fun016.call(this, array, length);
            };

            var holeCount, dst, src, value, valueCount, undefinedCount, i, i;

            if ($__R.mode) {
                holeCount = 0;
                dst = 0, src = 0, void 0;

                loop_break7: while ($__R.mode && src < length) {
                    if ($__R.mode) {
                        loop_continue7: {
                            if ($__R.mode && !(src in array)) {
                                if ($__R.mode) ++holeCount;

                                if ($__R.mode && holeCount < 256) {
                                    break loop_continue7;
                                }

                                if ($__R.mode) $__R.remainingStack++;
                                if ($__R.mode) return compactSparse.box(array, dst, src, length);else ;
                            }

                            if ($__R.mode) value = array[src];

                            if ($__R.mode && value === undefined) {
                                break loop_continue7;
                            }

                            if ($__R.mode) array[dst++] = value;
                        }

                        ++src;
                    }
                }

                valueCount = dst;
                undefinedCount = length - valueCount - holeCount;
                i = valueCount;

                loop_break8: while ($__R.mode && i < valueCount + undefinedCount) {
                    if ($__R.mode) {
                        loop_continue8: {
                            if ($__R.mode) array[i] = undefined;
                        }

                        ++i;
                    }
                }

                i = valueCount + undefinedCount;

                loop_break9: while ($__R.mode && i < length) {
                    if ($__R.mode) {
                        loop_continue9: {
                            if ($__R.mode) delete array[i];
                        }

                        ++i;
                    }
                }

                $__R.remainingStack++;
            }

            return valueCount;
            $__R.remainingStack++;
        };

        compact.box = function fun017(array, length) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [i] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [i];
            }

            var restoreNextFrame = () => {
                return fun017.call(this, array, length);
            };

            var i;

            if ($__R.mode) {
                i = 0;

                loop_break10: while ($__R.mode && i < array.length) {
                    if ($__R.mode) {
                        loop_continue10: {
                            if ($__R.mode && array[i] === undefined) {
                                if ($__R.mode) $__R.remainingStack++;
                                if ($__R.mode) return compactSlow.box(array, length);else ;
                            }
                        }

                        ++i;
                    }
                }

                $__R.remainingStack++;
            }

            return length;
            $__R.remainingStack++;
        };

        merge.box = function fun018(dst, src, srcIndex, srcEnd, width, comparator) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [comparisonResult00, left, dstIndex, leftEnd, right, rightEnd] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [comparisonResult00, left, dstIndex, leftEnd, right, rightEnd];
            }

            var restoreNextFrame = () => {
                return fun018.call(this, dst, src, srcIndex, srcEnd, width, comparator);
            };

            var left, leftEnd, right, rightEnd, dstIndex, comparisonResult00;

            if ($__R.mode) {
                left = srcIndex;
                leftEnd = min.box(left + width, srcEnd);
                right = leftEnd;
                rightEnd = min.box(right + width, srcEnd);
                dstIndex = left;
            }

            if ($__R.mode || !$__R.mode && target === 23) loop_break11: while ($__R.mode && dstIndex < rightEnd || !$__R.mode && target === 23) {
                if ($__R.mode || !$__R.mode && target === 23) loop_continue11: {
                    if ($__R.mode && right < rightEnd || !$__R.mode && target === 23) {
                        if ($__R.mode && left >= leftEnd) {
                            if ($__R.mode) dst[dstIndex] = src[right++];
                            break loop_continue11;
                        }

                        if ($__R.mode || target === 23) {
                            if ($__R.mode) comparisonResult00 = comparator(src[right], src[left]);else if (target === 23) comparisonResult00 = $__R.stack[$__R.stack.length - 1].f();

                            if (comparisonResult00 instanceof $__T.Capture) {
                                comparisonResult00.stack.push({
                                    kind: "rest",
                                    f: restoreNextFrame,
                                    index: 23,
                                    this: this
                                });
                                captureLocals(comparisonResult00.stack[comparisonResult00.stack.length - 1]);
                                return comparisonResult00;
                            }
                        }

                        if ($__R.mode && (typeof comparisonResult00 === "boolean" && !comparisonResult00 || comparisonResult00 < 0)) {
                            if ($__R.mode) dst[dstIndex] = src[right++];
                            break loop_continue11;
                        }
                    }

                    if ($__R.mode) dst[dstIndex] = src[left++];
                }
                if ($__R.mode) ++dstIndex;
            }
            $__R.remainingStack++;
        };

        mergeSort.box = function fun019(array, valueCount, comparator) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [buffer, src, dst, width, i, srcIndex, tmp, app9] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [buffer, src, dst, width, i, srcIndex, tmp, app9];
            }

            var restoreNextFrame = () => {
                return fun019.call(this, array, valueCount, comparator);
            };

            var buffer, dst, src, width, srcIndex, app9, tmp, i;

            if ($__R.mode) {
                buffer = [];

                buffer.length = valueCount;
                dst = buffer;
                src = array;
                width = 1;
            }

            if ($__R.mode || !$__R.mode && target === 24) loop_break13: while ($__R.mode && width < valueCount || !$__R.mode && target === 24) {
                if ($__R.mode || !$__R.mode && target === 24) loop_continue12: {
                    if ($__R.mode) srcIndex = 0;
                    if ($__R.mode || !$__R.mode && target === 24) loop_break14: while ($__R.mode && srcIndex < valueCount || !$__R.mode && target === 24) {
                        if ($__R.mode || !$__R.mode && target === 24) loop_continue14: {
                            if ($__R.mode || target === 24) {
                                if ($__R.mode) app9 = merge.box(dst, src, srcIndex, valueCount, width, comparator);else if (target === 24) app9 = $__R.stack[$__R.stack.length - 1].f();

                                if (app9 instanceof $__T.Capture) {
                                    app9.stack.push({
                                        kind: "rest",
                                        f: restoreNextFrame,
                                        index: 24,
                                        this: this
                                    });
                                    captureLocals(app9.stack[app9.stack.length - 1]);
                                    return app9;
                                }
                            }
                        }
                        if ($__R.mode) srcIndex += 2 * width;
                    }

                    if ($__R.mode) {
                        tmp = src;

                        src = dst;
                        dst = tmp;
                    }
                }
                if ($__R.mode) width *= 2;
            }

            if ($__R.mode && src !== array) {
                if ($__R.mode) {
                    i = 0;

                    loop_break12: while ($__R.mode && i < valueCount) {
                        if ($__R.mode) {
                            loop_continue13: {
                                if ($__R.mode) array[i] = src[i];
                            }

                            i++;
                        }
                    }
                }
            }

            $__R.remainingStack++;
        };

        bucketSort.box = function fun020(array, dst, bucket, depth) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [app10, app11, c, i, buckets, string, entry] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [app10, app11, c, i, buckets, string, entry];
            }

            var restoreNextFrame = () => {
                return fun020.call(this, array, dst, bucket, depth);
            };

            var app10, i, buckets, i, entry, string, c, i, app11;

            if ($__R.mode && (bucket.length < 32 || depth > 32) || !$__R.mode && target === 25) {
                if ($__R.mode || target === 25) {
                    if ($__R.mode) app10 = mergeSort.box(bucket, bucket.length, stringComparator.box);else if (target === 25) app10 = $__R.stack[$__R.stack.length - 1].f();

                    if (app10 instanceof $__T.Capture) {
                        app10.stack.push({
                            kind: "rest",
                            f: restoreNextFrame,
                            index: 25,
                            this: this
                        });
                        captureLocals(app10.stack[app10.stack.length - 1]);
                        return app10;
                    }
                }

                if ($__R.mode) {
                    i = 0;

                    loop_break15: while ($__R.mode && i < bucket.length) {
                        if ($__R.mode) {
                            loop_continue15: {
                                if ($__R.mode) array[dst++] = bucket[i].value;
                            }

                            ++i;
                        }
                    }

                    $__R.remainingStack++;
                }

                return dst;
            }

            if ($__R.mode) {
                buckets = [];
                i = 0;
            }

            if ($__R.mode || !$__R.mode && target === 26) loop_break16: while ($__R.mode && i < bucket.length || !$__R.mode && target === 26) {
                if ($__R.mode || !$__R.mode && target === 26) loop_continue16: {
                    if ($__R.mode) {
                        entry = bucket[i];
                        string = entry.string;
                    }

                    if ($__R.mode && string.length === depth) {
                        if ($__R.mode) array[dst++] = entry.value;
                        break loop_continue16;
                    }

                    if ($__R.mode || target === 26) {
                        if ($__R.mode) c = string.charCodeAt(depth);else if (target === 26) c = $__R.stack[$__R.stack.length - 1].f();

                        if (c instanceof $__T.Capture) {
                            c.stack.push({
                                kind: "rest",
                                f: restoreNextFrame,
                                index: 26,
                                this: this
                            });
                            captureLocals(c.stack[c.stack.length - 1]);
                            return c;
                        }
                    }

                    if ($__R.mode && !buckets[c]) {
                        if ($__R.mode) buckets[c] = [];
                    }

                    if ($__R.mode) buckets[c][buckets[c].length] = entry;
                }
                if ($__R.mode) ++i;
            }
            if ($__R.mode) i = 0;
            if ($__R.mode || !$__R.mode && target === 27) loop_break17: while ($__R.mode && i < buckets.length || !$__R.mode && target === 27) {
                if ($__R.mode || !$__R.mode && target === 27) loop_continue17: {
                    if ($__R.mode && !buckets[i]) {
                        break loop_continue17;
                    }

                    if ($__R.mode || target === 27) {
                        if ($__R.mode) app11 = bucketSort.box(array, dst, buckets[i], depth + 1);else if (target === 27) app11 = $__R.stack[$__R.stack.length - 1].f();

                        if (app11 instanceof $__T.Capture) {
                            app11.stack.push({
                                kind: "rest",
                                f: restoreNextFrame,
                                index: 27,
                                this: this
                            });
                            captureLocals(app11.stack[app11.stack.length - 1]);
                            return app11;
                        }
                    }

                    if ($__R.mode) dst = app11;
                }
                if ($__R.mode) ++i;
            }
            if ($__R.mode) $__R.remainingStack++;

            return dst;
            $__R.remainingStack++;
        };

        comparatorSort.box = function fun021(array, length, comparator) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [app12, valueCount] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [app12, valueCount];
            }

            var restoreNextFrame = () => {
                return fun021.call(this, array, length, comparator);
            };

            var valueCount, app12;

            if ($__R.mode || target === 28) {
                if ($__R.mode) valueCount = compact.box(array, length);else if (target === 28) valueCount = $__R.stack[$__R.stack.length - 1].f();

                if (valueCount instanceof $__T.Capture) {
                    valueCount.stack.push({
                        kind: "rest",
                        f: restoreNextFrame,
                        index: 28,
                        this: this
                    });
                    captureLocals(valueCount.stack[valueCount.stack.length - 1]);
                    return valueCount;
                }
            }

            if ($__R.mode || target === 29) {
                if ($__R.mode) app12 = mergeSort.box(array, valueCount, comparator);else if (target === 29) app12 = $__R.stack[$__R.stack.length - 1].f();

                if (app12 instanceof $__T.Capture) {
                    app12.stack.push({
                        kind: "rest",
                        f: restoreNextFrame,
                        index: 29,
                        this: this
                    });
                    captureLocals(app12.stack[app12.stack.length - 1]);
                    return app12;
                }
            }

            $__R.remainingStack++;
        };

        stringSort.box = function fun022(array, length) {
            var target = null;
            var $frame = null;
            $__R.remainingStack--;

            if (!$__R.mode) {
                $frame = $__R.stack.pop();
                target = $frame.index;
                [app13, i, strings, valueCount] = $frame.locals;
            }

            function captureLocals(frame) {
                frame.locals = [app13, i, strings, valueCount];
            }

            var restoreNextFrame = () => {
                return fun022.call(this, array, length);
            };

            var valueCount, strings, i, app13;

            if ($__R.mode || target === 30) {
                if ($__R.mode) valueCount = compact.box(array, length);else if (target === 30) valueCount = $__R.stack[$__R.stack.length - 1].f();

                if (valueCount instanceof $__T.Capture) {
                    valueCount.stack.push({
                        kind: "rest",
                        f: restoreNextFrame,
                        index: 30,
                        this: this
                    });
                    captureLocals(valueCount.stack[valueCount.stack.length - 1]);
                    return valueCount;
                }
            }

            if ($__R.mode) {
                strings = new Array(valueCount);
                i = 0;

                loop_break18: while ($__R.mode && i < valueCount) {
                    if ($__R.mode) {
                        loop_continue18: {
                            if ($__R.mode) strings[i] = { string: array[i], value: array[i] };
                        }

                        ++i;
                    }
                }
            }

            if ($__R.mode || target === 32) {
                if ($__R.mode) app13 = bucketSort.box(array, 0, strings, 0);else if (target === 32) app13 = $__R.stack[$__R.stack.length - 1].f();

                if (app13 instanceof $__T.Capture) {
                    app13.stack.push({
                        kind: "rest",
                        f: restoreNextFrame,
                        index: 32,
                        this: this
                    });
                    captureLocals(app13.stack[app13.stack.length - 1]);
                    return app13;
                }
            }

            $__R.remainingStack++;
        };

        array = o;
        length = array.length >>> 0;
    }

    // For compatibility with Firefox and Chrome, do nothing observable
    // to the target array if it has 0 or 1 sortable properties.
    if ($__R.mode && length < 2) {
        if ($__R.mode) $__R.remainingStack++;

        return array;
    }

    if ($__R.mode && typeof comparator === "function" || !$__R.mode && target === 33) {
        if ($__R.mode || target === 33) {
            if ($__R.mode) app14 = comparatorSort.box(array, length, comparator);else if (target === 33) app14 = $__R.stack[$__R.stack.length - 1].f();

            if (app14 instanceof $__T.Capture) {
                app14.stack.push({
                    kind: "rest",
                    f: restoreNextFrame,
                    index: 33,
                    this: this
                });
                captureLocals(app14.stack[app14.stack.length - 1]);
                return app14;
            }
        }
    } else if ($__R.mode || !$__R.mode && (target === 35 || target === 34)) {
        if ($__R.mode && (comparator === null || comparator === undefined) || !$__R.mode && target === 34) {
            if ($__R.mode || target === 34) {
                if ($__R.mode) app15 = stringSort.box(array, length);else if (target === 34) app15 = $__R.stack[$__R.stack.length - 1].f();

                if (app15 instanceof $__T.Capture) {
                    app15.stack.push({
                        kind: "rest",
                        f: restoreNextFrame,
                        index: 34,
                        this: this
                    });
                    captureLocals(app15.stack[app15.stack.length - 1]);
                    return app15;
                }
            }
        } else if ($__R.mode || !$__R.mode && target === 35) {
            if ($__R.mode) {
                app16 = new TypeError("Array.prototype.sort requires the comparsion function be a function or undefined");
                $__R.pushTrace("Line 283: in array_sort");
            }

            throw app16;
        }
    }

    if ($__R.mode) $__R.remainingStack++;

    return array;
    $__R.remainingStack++;
};
if ($__R.mode) map.box = function fun024(o, ...args) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
    }

    function captureLocals(frame) {}

    var restoreNextFrame = () => {
        return fun024.call(this, o, ...args);
    };

    if ($__R.mode && o instanceof Array) {
        if ($__R.mode) $__R.remainingStack++;
        if ($__R.mode) return array_map.box(o, args[0], args[1]);else ;
    } else if ($__R.mode) {
        if ($__R.mode) $__R.remainingStack++;
        if ($__R.mode) return o.map.call(o, ...args);else ;
    }

    $__R.remainingStack++;
};
if ($__R.mode) filter.box = function fun025(o, args) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
    }

    function captureLocals(frame) {}

    var restoreNextFrame = () => {
        return fun025.call(this, o, args);
    };

    if ($__R.mode && o instanceof Array) {
        if ($__R.mode) $__R.remainingStack++;
        if ($__R.mode) return array_filter.box(o, args);else ;
    } else if ($__R.mode) {
        if ($__R.mode) $__R.remainingStack++;
        if ($__R.mode) return o.filter.call(o, args);else ;
    }

    $__R.remainingStack++;
};
if ($__R.mode) stopifyArray.box = function fun026(arr) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [app17] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [app17];
    }

    var restoreNextFrame = () => {
        return fun026.call(this, arr);
    };

    var app17;

    if ($__R.mode || target === 40) {
        if ($__R.mode) app17 = Reflect.setPrototypeOf(arr, stopifyArrayPrototype.box);else if (target === 40) app17 = $__R.stack[$__R.stack.length - 1].f();

        if (app17 instanceof $__T.Capture) {
            app17.stack.push({
                kind: "rest",
                f: restoreNextFrame,
                index: 40,
                this: this
            });
            captureLocals(app17.stack[app17.stack.length - 1]);
            return app17;
        }
    }
    // @stopify flat


    if ($__R.mode) $__R.remainingStack++;

    return arr;
    $__R.remainingStack++;
};
if ($__R.mode) Object.defineProperty(exports, "__esModule", { value: true });
// Do not directly use this file. We stopify and webpack this file for each
// type of transformation.

if ($__R.mode) exports.map = map.box;
if ($__R.mode) exports.filter = filter.box;
if ($__R.mode) fun00 = function funExpr0(f) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [arg00] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [arg00];
    }

    var restoreNextFrame = () => {
        return funExpr0.call(this, f);
    };

    var arg00;

    if ($__R.mode || target === 42) {
        if ($__R.mode) arg00 = map.box(this, f, this);else if (target === 42) arg00 = $__R.stack[$__R.stack.length - 1].f();

        if (arg00 instanceof $__T.Capture) {
            arg00.stack.push({
                kind: "rest",
                f: restoreNextFrame,
                index: 42,
                this: this
            });
            captureLocals(arg00.stack[arg00.stack.length - 1]);
            return arg00;
        }
    }

    if ($__R.mode) $__R.remainingStack++;
    if ($__R.mode) return stopifyArray.box(arg00);else ;
    $__R.remainingStack++;
};
if ($__R.mode) fun01 = function funExpr1(f) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [arg01] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [arg01];
    }

    var restoreNextFrame = () => {
        return funExpr1.call(this, f);
    };

    var arg01;

    if ($__R.mode || target === 44) {
        if ($__R.mode) arg01 = filter.box(this, f);else if (target === 44) arg01 = $__R.stack[$__R.stack.length - 1].f();

        if (arg01 instanceof $__T.Capture) {
            arg01.stack.push({
                kind: "rest",
                f: restoreNextFrame,
                index: 44,
                this: this
            });
            captureLocals(arg01.stack[arg01.stack.length - 1]);
            return arg01;
        }
    }

    if ($__R.mode) $__R.remainingStack++;
    if ($__R.mode) return stopifyArray.box(arg01);else ;
    $__R.remainingStack++;
};
if ($__R.mode) fun02 = function funExpr2(f, init) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [app18, i, acc, arrLen] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [app18, i, acc, arrLen];
    }

    var restoreNextFrame = () => {
        return funExpr2.call(this, f, init);
    };

    var arrLen, acc, i, app18;

    if ($__R.mode) {
        arrLen = this.length;
        acc = arguments.length === 1 ? this[arrLen - 1] : init;
        i = arguments.length === 1 ? arrLen - 2 : arrLen - 1;
    }

    if ($__R.mode || !$__R.mode && target === 46) loop_break19: while ($__R.mode && i >= 0 || !$__R.mode && target === 46) {
        if ($__R.mode || !$__R.mode && target === 46) loop_continue19: {
            if ($__R.mode || target === 46) {
                if ($__R.mode) app18 = f(acc, this[i], i, this);else if (target === 46) app18 = $__R.stack[$__R.stack.length - 1].f();

                if (app18 instanceof $__T.Capture) {
                    app18.stack.push({
                        kind: "rest",
                        f: restoreNextFrame,
                        index: 46,
                        this: this
                    });
                    captureLocals(app18.stack[app18.stack.length - 1]);
                    return app18;
                }
            }

            if ($__R.mode) {
                acc = app18;
                i = i - 1;
            }
        }
    }
    if ($__R.mode) $__R.remainingStack++;

    return acc;
    $__R.remainingStack++;
};
if ($__R.mode) fun03 = function funExpr3(f, init) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [app19, i, bound, arrLen, acc] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [app19, i, bound, arrLen, acc];
    }

    var restoreNextFrame = () => {
        return funExpr3.call(this, f, init);
    };

    var arrLen, acc, bound, i, app19;

    if ($__R.mode) {
        arrLen = this.length;
        acc = arguments.length === 1 ? this[arrLen - 1] : init;
        bound = arguments.length === 1 ? arrLen - 1 : arrLen;
        i = 0;
    }

    if ($__R.mode || !$__R.mode && target === 47) loop_break20: while ($__R.mode && i < bound || !$__R.mode && target === 47) {
        if ($__R.mode || !$__R.mode && target === 47) loop_continue20: {
            if ($__R.mode || target === 47) {
                if ($__R.mode) app19 = f(acc, this[i], i, this);else if (target === 47) app19 = $__R.stack[$__R.stack.length - 1].f();

                if (app19 instanceof $__T.Capture) {
                    app19.stack.push({
                        kind: "rest",
                        f: restoreNextFrame,
                        index: 47,
                        this: this
                    });
                    captureLocals(app19.stack[app19.stack.length - 1]);
                    return app19;
                }
            }

            if ($__R.mode) {
                acc = app19;
                i = i + 1;
            }
        }
    }
    if ($__R.mode) $__R.remainingStack++;

    return acc;
    $__R.remainingStack++;
};
if ($__R.mode) fun04 = function funExpr4(pred) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [app20, l, i] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [app20, l, i];
    }

    var restoreNextFrame = () => {
        return funExpr4.call(this, pred);
    };

    var i, l, app20;

    if ($__R.mode) {
        i = 0;
        l = this.length;
    }

    if ($__R.mode || !$__R.mode && target === 48) loop_break21: while ($__R.mode && i < l || !$__R.mode && target === 48) {
        if ($__R.mode || !$__R.mode && target === 48) loop_continue21: {
            if ($__R.mode || target === 48) {
                if ($__R.mode) app20 = pred(this[i]);else if (target === 48) app20 = $__R.stack[$__R.stack.length - 1].f();

                if (app20 instanceof $__T.Capture) {
                    app20.stack.push({
                        kind: "rest",
                        f: restoreNextFrame,
                        index: 48,
                        this: this
                    });
                    captureLocals(app20.stack[app20.stack.length - 1]);
                    return app20;
                }
            }

            if ($__R.mode && app20) {
                if ($__R.mode) $__R.remainingStack++;

                return true;
            }

            if ($__R.mode) i = i + 1;
        }
    }
    if ($__R.mode) $__R.remainingStack++;

    return false;
    $__R.remainingStack++;
};
if ($__R.mode) fun05 = function funExpr5(pred) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [app21, l, i] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [app21, l, i];
    }

    var restoreNextFrame = () => {
        return funExpr5.call(this, pred);
    };

    var i, l, app21;

    if ($__R.mode) {
        i = 0;
        l = this.length;
    }

    if ($__R.mode || !$__R.mode && target === 49) loop_break22: while ($__R.mode && i < l || !$__R.mode && target === 49) {
        if ($__R.mode || !$__R.mode && target === 49) loop_continue22: {
            if ($__R.mode || target === 49) {
                if ($__R.mode) app21 = pred(this[i]);else if (target === 49) app21 = $__R.stack[$__R.stack.length - 1].f();

                if (app21 instanceof $__T.Capture) {
                    app21.stack.push({
                        kind: "rest",
                        f: restoreNextFrame,
                        index: 49,
                        this: this
                    });
                    captureLocals(app21.stack[app21.stack.length - 1]);
                    return app21;
                }
            }

            if ($__R.mode && !app21) {
                if ($__R.mode) $__R.remainingStack++;

                return false;
            }

            if ($__R.mode) i = i + 1;
        }
    }
    if ($__R.mode) $__R.remainingStack++;

    return true;
    $__R.remainingStack++;
};
if ($__R.mode) fun06 = function funExpr6(pred) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [app22, l, i] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [app22, l, i];
    }

    var restoreNextFrame = () => {
        return funExpr6.call(this, pred);
    };

    var i, l, app22;

    if ($__R.mode) {
        i = 0;
        l = this.length;
    }

    if ($__R.mode || !$__R.mode && target === 50) loop_break23: while ($__R.mode && i < l || !$__R.mode && target === 50) {
        if ($__R.mode || !$__R.mode && target === 50) loop_continue23: {
            if ($__R.mode || target === 50) {
                if ($__R.mode) app22 = pred(this[i]);else if (target === 50) app22 = $__R.stack[$__R.stack.length - 1].f();

                if (app22 instanceof $__T.Capture) {
                    app22.stack.push({
                        kind: "rest",
                        f: restoreNextFrame,
                        index: 50,
                        this: this
                    });
                    captureLocals(app22.stack[app22.stack.length - 1]);
                    return app22;
                }
            }

            if ($__R.mode && app22) {
                if ($__R.mode) $__R.remainingStack++;

                return this[i];
            }

            if ($__R.mode) i = i + 1;
        }
    }
    $__R.remainingStack++;
};
if ($__R.mode) fun07 = function funExpr7(pred) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [app23, l, i] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [app23, l, i];
    }

    var restoreNextFrame = () => {
        return funExpr7.call(this, pred);
    };

    var i, l, app23;

    if ($__R.mode) {
        i = 0;
        l = this.length;
    }

    if ($__R.mode || !$__R.mode && target === 51) loop_break24: while ($__R.mode && i < l || !$__R.mode && target === 51) {
        if ($__R.mode || !$__R.mode && target === 51) loop_continue24: {
            if ($__R.mode || target === 51) {
                if ($__R.mode) app23 = pred(this[i]);else if (target === 51) app23 = $__R.stack[$__R.stack.length - 1].f();

                if (app23 instanceof $__T.Capture) {
                    app23.stack.push({
                        kind: "rest",
                        f: restoreNextFrame,
                        index: 51,
                        this: this
                    });
                    captureLocals(app23.stack[app23.stack.length - 1]);
                    return app23;
                }
            }

            if ($__R.mode && app23) {
                if ($__R.mode) $__R.remainingStack++;

                return i;
            }

            if ($__R.mode) i = i + 1;
        }
    }
    if ($__R.mode) $__R.remainingStack++;

    return -1;
    $__R.remainingStack++;
};
if ($__R.mode) fun08 = function method0(f) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [app24, l, i] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [app24, l, i];
    }

    var restoreNextFrame = () => {
        return method0.call(this, f);
    };

    var i, l, app24;

    if ($__R.mode) {
        i = 0;
        l = this.length;
    }

    if ($__R.mode || !$__R.mode && target === 52) loop_break25: while ($__R.mode && i < l || !$__R.mode && target === 52) {
        if ($__R.mode || !$__R.mode && target === 52) loop_continue25: {
            if ($__R.mode || target === 52) {
                if ($__R.mode) app24 = f(this[i], i, this);else if (target === 52) app24 = $__R.stack[$__R.stack.length - 1].f();

                if (app24 instanceof $__T.Capture) {
                    app24.stack.push({
                        kind: "rest",
                        f: restoreNextFrame,
                        index: 52,
                        this: this
                    });
                    captureLocals(app24.stack[app24.stack.length - 1]);
                    return app24;
                }
            }

            if ($__R.mode) i = i + 1;
        }
    }
    $__R.remainingStack++;
};
if ($__R.mode) fun09 = function funExpr8(comparator) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        $frame = $__R.stack.pop();
        target = $frame.index;
        [arg02] = $frame.locals;
    }

    function captureLocals(frame) {
        frame.locals = [arg02];
    }

    var restoreNextFrame = () => {
        return funExpr8.call(this, comparator);
    };

    var arg02;

    if ($__R.mode || target === 53) {
        if ($__R.mode) arg02 = array_sort.box(this, comparator);else if (target === 53) arg02 = $__R.stack[$__R.stack.length - 1].f();

        if (arg02 instanceof $__T.Capture) {
            arg02.stack.push({
                kind: "rest",
                f: restoreNextFrame,
                index: 53,
                this: this
            });
            captureLocals(arg02.stack[arg02.stack.length - 1]);
            return arg02;
        }
    }

    if ($__R.mode) $__R.remainingStack++;
    if ($__R.mode) return stopifyArray.box(arg02);else ;
    $__R.remainingStack++;
};
if ($__R.mode) stopifyArrayPrototype.box = {
    __proto__: Array.prototype,
    map: fun00,
    filter: fun01,
    reduceRight: fun02,
    reduce: fun03,
    // NOTE(arjun): thisArg ignored
    some: fun04,
    every: fun05,
    find: fun06,
    findIndex: fun07,
    // NOTE(arjun): Ignores thisArg
    forEach: fun08,

    sort: fun09
};
if ($__R.mode) exports.stopifyArray = stopifyArray.box;