"use strict";
// Do not directly use this file. We stopify and webpack this file for each
// type of transformation.

const $__C = stopify.compiler;
var $__T = stopify;
var $__R = $__T.newRTS("catch");
var handleNew, array_sort, stopifyArrayPrototype, stopifyArray, fun0, fun1, fun2, fun3, fun4, fun5, fun6, fun7, fun8, fun9, fun10, fun11;
if ($__R.mode) handleNew = {
    box: undefined
};
if ($__R.mode) array_sort = {
    box: undefined
};
if ($__R.mode) stopifyArrayPrototype = {
    box: undefined
};
if ($__R.mode) stopifyArray = {
    box: undefined
};
if ($__R.mode) handleNew.box = function fun12(constr, ...args) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [result00, obj00, app1, app0] = $frame.locals;
    }

    try {
        var app0, app1, obj00, result00;
        if ($__R.mode) app0 = $__C.knownBuiltIns.includes(constr);

        if ($__R.mode && app0 || !$__R.mode && target === 1) {
            if ($__R.mode) {
                app1 = new constr(...args);
                $__R.remainingStack++;
            }

            return app1;
        }

        if ($__R.mode) obj00 = Object.create(constr.prototype);

        if ($__R.mode) {
            target = 3;
            result00 = constr.apply(obj00, args);
        } else if (target === 3) result00 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) $__R.remainingStack++;
        return typeof result00 === "object" ? result00 : obj00;
    } catch (exn0) {
        if (exn0 instanceof $__T.Capture) {
            exn0.stack.push({
                kind: "rest",
                f: fun12,
                index: target,
                locals: [result00, obj00, app1, app0],
                params: [constr, ...args],
                this: this
            });
        }

        throw exn0;
    }

    $__R.remainingStack++;
};
if ($__R.mode) array_sort.box = function fun23(o, comparator) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app10, app11, compact, compactSparse, compactSlow, length, stringComparator, bucketSort, stringSort, min, comparatorSort, mergeSort, merge, app9, array] = $frame.locals;
    }

    try {
        "use strict";

        var min, stringComparator, compactSparse, compactSlow, compact, merge, mergeSort, bucketSort, comparatorSort, stringSort, array, length, app9, app10, app11;

        if ($__R.mode) {
            min = {
                box: undefined
            };
            stringComparator = {
                box: undefined
            };
            compactSparse = {
                box: undefined
            };
            compactSlow = {
                box: undefined
            };
            compact = {
                box: undefined
            };
            merge = {
                box: undefined
            };
            mergeSort = {
                box: undefined
            };
            bucketSort = {
                box: undefined
            };
            comparatorSort = {
                box: undefined
            };
            stringSort = {
                box: undefined
            };

            min.box = function fun13(a, b) {
                return a < b ? a : b;
            };

            stringComparator.box = function fun14(a, b) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [aCharCode, bCharCode, length, aLength, bLength, i, aString, bString] = $frame.locals;
                }

                try {
                    var aString, bString, aLength, bLength, length, i, aCharCode, bCharCode;

                    if ($__R.mode) {
                        aString = a.string;
                        bString = b.string;
                        aLength = aString.length;
                        bLength = bString.length;
                        length = min.box(aLength, bLength);
                        i = 0;
                    }

                    if ($__R.mode || !$__R.mode && (target === 6 || target === 5)) loop_break0: while ($__R.mode && i < length || !$__R.mode && (target === 6 || target === 5)) {
                        if ($__R.mode || !$__R.mode && (target === 6 || target === 5)) loop_continue0: {
                            if ($__R.mode) {
                                target = 5;
                                aCharCode = aString.charCodeAt(i);
                            } else if (target === 5) aCharCode = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                            if ($__R.mode) {
                                target = 6;
                                bCharCode = bString.charCodeAt(i);
                            } else if (target === 6) bCharCode = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                            if ($__R.mode && aCharCode === bCharCode) {
                                break loop_continue0;
                            }

                            if ($__R.mode) $__R.remainingStack++;

                            return aCharCode - bCharCode;
                        }
                        if ($__R.mode) ++i;
                    }
                    if ($__R.mode) $__R.remainingStack++;

                    return aLength - bLength;
                } catch (exn1) {
                    if (exn1 instanceof $__T.Capture) {
                        exn1.stack.push({
                            kind: "rest",
                            f: fun14,
                            index: target,
                            locals: [aCharCode, bCharCode, length, aLength, bLength, i, aString, bString],
                            params: [a, b],
                            this: this
                        });
                    }

                    throw exn1;
                }

                $__R.remainingStack++;
            };

            compactSparse.box = function fun15(array, dst, src, length) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [i00, i, value, index, propertyNames, obj, seen, valueCount, undefinedCount] = $frame.locals;
                }

                try {
                    var seen, valueCount, undefinedCount, i00, obj, propertyNames, i, index, value, i;

                    if ($__R.mode) {
                        seen = {};
                        valueCount = 0;
                        undefinedCount = 0;
                        i00 = dst;

                        loop_break1: while ($__R.mode && i00 < src) {
                            if ($__R.mode) {
                                loop_continue1: {
                                    if ($__R.mode) delete array[i00];
                                }

                                ++i00;
                            }
                        }

                        obj = array;
                    }

                    if ($__R.mode || !$__R.mode && (target === 8 || target === 7)) loop_break2: while ($__R.mode && obj || !$__R.mode && (target === 8 || target === 7)) {
                        if ($__R.mode || !$__R.mode && target === 7) loop_continue2: {
                            if ($__R.mode) {
                                propertyNames = Object.getOwnPropertyNames(obj);
                                i = 0;

                                loop_break3: while ($__R.mode && i < propertyNames.length) {
                                    if ($__R.mode) {
                                        loop_continue4: {
                                            if ($__R.mode) index = propertyNames[i];

                                            if ($__R.mode && index < length) {
                                                // Exclude non-numeric properties and properties past length.
                                                if ($__R.mode && seen[index]) {
                                                    // Exclude duplicates.
                                                    break loop_continue4;
                                                }

                                                if ($__R.mode) {
                                                    seen[index] = 1;
                                                    value = array[index];

                                                    delete array[index];
                                                }

                                                if ($__R.mode && value === undefined) {
                                                    if ($__R.mode) ++undefinedCount;
                                                    break loop_continue4;
                                                }

                                                if ($__R.mode) array[valueCount++] = value;
                                            }
                                        }

                                        ++i;
                                    }
                                }
                            }
                        }
                        if ($__R.mode) obj = Object.getPrototypeOf(obj);
                    }

                    if ($__R.mode) {
                        i = valueCount;

                        loop_break4: while ($__R.mode && i < valueCount + undefinedCount) {
                            if ($__R.mode) {
                                loop_continue3: {
                                    if ($__R.mode) array[i] = undefined;
                                }

                                ++i;
                            }
                        }

                        $__R.remainingStack++;
                    }

                    return valueCount;
                } catch (exn2) {
                    if (exn2 instanceof $__T.Capture) {
                        exn2.stack.push({
                            kind: "rest",
                            f: fun15,
                            index: target,
                            locals: [i00, i, value, index, propertyNames, obj, seen, valueCount, undefinedCount],
                            params: [array, dst, src, length],
                            this: this
                        });
                    }

                    throw exn2;
                }

                $__R.remainingStack++;
            };

            compactSlow.box = function fun16(array, length) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [src, dst, i, holeCount, value, app2, valueCount, undefinedCount] = $frame.locals;
                }

                try {
                    var holeCount, dst, src, app2, value, valueCount, undefinedCount, i, i;

                    if ($__R.mode) {
                        holeCount = 0;
                        dst = 0, src = 0, void 0;
                    }

                    if ($__R.mode || !$__R.mode && target === 9) loop_break5: while ($__R.mode && src < length || !$__R.mode && target === 9) {
                        if ($__R.mode || !$__R.mode && target === 9) loop_continue5: {
                            if ($__R.mode && !(src in array) || !$__R.mode && target === 9) {
                                if ($__R.mode) ++holeCount;

                                if ($__R.mode && holeCount < 256) {
                                    break loop_continue5;
                                }

                                if ($__R.mode) {
                                    target = 9;
                                    app2 = compactSparse.box(array, dst, src, length);
                                } else if (target === 9) app2 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                                if ($__R.mode) $__R.remainingStack++;

                                return app2;
                            }

                            if ($__R.mode) value = array[src];

                            if ($__R.mode && value === undefined) {
                                break loop_continue5;
                            }

                            if ($__R.mode) array[dst++] = value;
                        }
                        if ($__R.mode) ++src;
                    }

                    if ($__R.mode) {
                        valueCount = dst;
                        undefinedCount = length - valueCount - holeCount;
                        i = valueCount;

                        loop_break6: while ($__R.mode && i < valueCount + undefinedCount) {
                            if ($__R.mode) {
                                loop_continue6: {
                                    if ($__R.mode) array[i] = undefined;
                                }

                                ++i;
                            }
                        }

                        i = valueCount + undefinedCount;

                        loop_break7: while ($__R.mode && i < length) {
                            if ($__R.mode) {
                                loop_continue7: {
                                    if ($__R.mode) delete array[i];
                                }

                                ++i;
                            }
                        }

                        $__R.remainingStack++;
                    }

                    return valueCount;
                } catch (exn3) {
                    if (exn3 instanceof $__T.Capture) {
                        exn3.stack.push({
                            kind: "rest",
                            f: fun16,
                            index: target,
                            locals: [src, dst, i, holeCount, value, app2, valueCount, undefinedCount],
                            params: [array, length],
                            this: this
                        });
                    }

                    throw exn3;
                }

                $__R.remainingStack++;
            };

            compact.box = function fun17(array, length) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [app3, i] = $frame.locals;
                }

                try {
                    var i, app3;
                    if ($__R.mode) i = 0;
                    if ($__R.mode || !$__R.mode && target === 10) loop_break8: while ($__R.mode && i < array.length || !$__R.mode && target === 10) {
                        if ($__R.mode || !$__R.mode && target === 10) loop_continue8: {
                            if ($__R.mode && array[i] === undefined || !$__R.mode && target === 10) {
                                if ($__R.mode) {
                                    target = 10;
                                    app3 = compactSlow.box(array, length);
                                } else if (target === 10) app3 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                                if ($__R.mode) $__R.remainingStack++;

                                return app3;
                            }
                        }
                        if ($__R.mode) ++i;
                    }
                    if ($__R.mode) $__R.remainingStack++;

                    return length;
                } catch (exn4) {
                    if (exn4 instanceof $__T.Capture) {
                        exn4.stack.push({
                            kind: "rest",
                            f: fun17,
                            index: target,
                            locals: [app3, i],
                            params: [array, length],
                            this: this
                        });
                    }

                    throw exn4;
                }

                $__R.remainingStack++;
            };

            merge.box = function fun18(dst, src, srcIndex, srcEnd, width, comparator) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [comparisonResult00, left, dstIndex, leftEnd, right, rightEnd] = $frame.locals;
                }

                try {
                    var left, leftEnd, right, rightEnd, dstIndex, comparisonResult00;

                    if ($__R.mode) {
                        left = srcIndex;
                        leftEnd = min.box(left + width, srcEnd);
                        right = leftEnd;
                        rightEnd = min.box(right + width, srcEnd);
                        dstIndex = left;
                    }

                    if ($__R.mode || !$__R.mode && target === 13) loop_break9: while ($__R.mode && dstIndex < rightEnd || !$__R.mode && target === 13) {
                        if ($__R.mode || !$__R.mode && target === 13) loop_continue9: {
                            if ($__R.mode && right < rightEnd || !$__R.mode && target === 13) {
                                if ($__R.mode && left >= leftEnd) {
                                    if ($__R.mode) dst[dstIndex] = src[right++];
                                    break loop_continue9;
                                }

                                if ($__R.mode) {
                                    target = 13;
                                    comparisonResult00 = comparator(src[right], src[left]);
                                } else if (target === 13) comparisonResult00 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                                if ($__R.mode && (typeof comparisonResult00 === "boolean" && !comparisonResult00 || comparisonResult00 < 0)) {
                                    if ($__R.mode) dst[dstIndex] = src[right++];
                                    break loop_continue9;
                                }
                            }

                            if ($__R.mode) dst[dstIndex] = src[left++];
                        }
                        if ($__R.mode) ++dstIndex;
                    }
                } catch (exn5) {
                    if (exn5 instanceof $__T.Capture) {
                        exn5.stack.push({
                            kind: "rest",
                            f: fun18,
                            index: target,
                            locals: [comparisonResult00, left, dstIndex, leftEnd, right, rightEnd],
                            params: [dst, src, srcIndex, srcEnd, width, comparator],
                            this: this
                        });
                    }

                    throw exn5;
                }

                $__R.remainingStack++;
            };

            mergeSort.box = function fun19(array, valueCount, comparator) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [buffer, src, dst, width, i, srcIndex, app4, tmp] = $frame.locals;
                }

                try {
                    var buffer, dst, src, width, srcIndex, app4, tmp, i;

                    if ($__R.mode) {
                        buffer = [];

                        buffer.length = valueCount;
                        dst = buffer;
                        src = array;
                        width = 1;
                    }

                    if ($__R.mode || !$__R.mode && target === 14) loop_break11: while ($__R.mode && width < valueCount || !$__R.mode && target === 14) {
                        if ($__R.mode || !$__R.mode && target === 14) loop_continue10: {
                            if ($__R.mode) srcIndex = 0;
                            if ($__R.mode || !$__R.mode && target === 14) loop_break12: while ($__R.mode && srcIndex < valueCount || !$__R.mode && target === 14) {
                                if ($__R.mode || !$__R.mode && target === 14) loop_continue12: {
                                    if ($__R.mode) {
                                        target = 14;
                                        app4 = merge.box(dst, src, srcIndex, valueCount, width, comparator);
                                    } else if (target === 14) app4 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
                                }
                                if ($__R.mode) srcIndex += 2 * width;
                            }

                            if ($__R.mode) {
                                tmp = src;

                                src = dst;
                                dst = tmp;
                            }
                        }
                        if ($__R.mode) width *= 2;
                    }

                    if ($__R.mode && src !== array) {
                        if ($__R.mode) {
                            i = 0;

                            loop_break10: while ($__R.mode && i < valueCount) {
                                if ($__R.mode) {
                                    loop_continue11: {
                                        if ($__R.mode) array[i] = src[i];
                                    }

                                    i++;
                                }
                            }
                        }
                    }
                } catch (exn6) {
                    if (exn6 instanceof $__T.Capture) {
                        exn6.stack.push({
                            kind: "rest",
                            f: fun19,
                            index: target,
                            locals: [buffer, src, dst, width, i, srcIndex, app4, tmp],
                            params: [array, valueCount, comparator],
                            this: this
                        });
                    }

                    throw exn6;
                }

                $__R.remainingStack++;
            };

            bucketSort.box = function fun20(array, dst, bucket, depth) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [c, i, buckets, string, entry, app5, app6] = $frame.locals;
                }

                try {
                    var app5, i, buckets, i, entry, string, c, i, app6;

                    if ($__R.mode && (bucket.length < 32 || depth > 32) || !$__R.mode && target === 15) {
                        if ($__R.mode) {
                            target = 15;
                            app5 = mergeSort.box(bucket, bucket.length, stringComparator.box);
                        } else if (target === 15) app5 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                        if ($__R.mode) {
                            i = 0;

                            loop_break13: while ($__R.mode && i < bucket.length) {
                                if ($__R.mode) {
                                    loop_continue13: {
                                        if ($__R.mode) array[dst++] = bucket[i].value;
                                    }

                                    ++i;
                                }
                            }

                            $__R.remainingStack++;
                        }

                        return dst;
                    }

                    if ($__R.mode) {
                        buckets = [];
                        i = 0;
                    }

                    if ($__R.mode || !$__R.mode && target === 16) loop_break14: while ($__R.mode && i < bucket.length || !$__R.mode && target === 16) {
                        if ($__R.mode || !$__R.mode && target === 16) loop_continue14: {
                            if ($__R.mode) {
                                entry = bucket[i];
                                string = entry.string;
                            }

                            if ($__R.mode && string.length === depth) {
                                if ($__R.mode) array[dst++] = entry.value;
                                break loop_continue14;
                            }

                            if ($__R.mode) {
                                target = 16;
                                c = string.charCodeAt(depth);
                            } else if (target === 16) c = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                            if ($__R.mode && !buckets[c]) {
                                if ($__R.mode) buckets[c] = [];
                            }

                            if ($__R.mode) buckets[c][buckets[c].length] = entry;
                        }
                        if ($__R.mode) ++i;
                    }
                    if ($__R.mode) i = 0;
                    if ($__R.mode || !$__R.mode && target === 17) loop_break15: while ($__R.mode && i < buckets.length || !$__R.mode && target === 17) {
                        if ($__R.mode || !$__R.mode && target === 17) loop_continue15: {
                            if ($__R.mode && !buckets[i]) {
                                break loop_continue15;
                            }

                            if ($__R.mode) {
                                target = 17;
                                app6 = bucketSort.box(array, dst, buckets[i], depth + 1);
                            } else if (target === 17) app6 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                            if ($__R.mode) dst = app6;
                        }
                        if ($__R.mode) ++i;
                    }
                    if ($__R.mode) $__R.remainingStack++;

                    return dst;
                } catch (exn7) {
                    if (exn7 instanceof $__T.Capture) {
                        exn7.stack.push({
                            kind: "rest",
                            f: fun20,
                            index: target,
                            locals: [c, i, buckets, string, entry, app5, app6],
                            params: [array, dst, bucket, depth],
                            this: this
                        });
                    }

                    throw exn7;
                }

                $__R.remainingStack++;
            };

            comparatorSort.box = function fun21(array, length, comparator) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [app7, valueCount] = $frame.locals;
                }

                try {
                    var valueCount, app7;

                    if ($__R.mode) {
                        target = 18;
                        valueCount = compact.box(array, length);
                    } else if (target === 18) valueCount = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode) {
                        target = 19;
                        app7 = mergeSort.box(array, valueCount, comparator);
                    } else if (target === 19) app7 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
                } catch (exn8) {
                    if (exn8 instanceof $__T.Capture) {
                        exn8.stack.push({
                            kind: "rest",
                            f: fun21,
                            index: target,
                            locals: [app7, valueCount],
                            params: [array, length, comparator],
                            this: this
                        });
                    }

                    throw exn8;
                }

                $__R.remainingStack++;
            };

            stringSort.box = function fun22(array, length) {
                var target = null;
                var $frame = null;
                $__R.remainingStack--;

                if (!$__R.mode) {
                    const $frame = $__R.stack.pop();
                    target = $frame.index;
                    [app8, i, strings, valueCount] = $frame.locals;
                }

                try {
                    var valueCount, strings, i, app8;

                    if ($__R.mode) {
                        target = 20;
                        valueCount = compact.box(array, length);
                    } else if (target === 20) valueCount = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                    if ($__R.mode) {
                        strings = new Array(valueCount);
                        i = 0;

                        loop_break16: while ($__R.mode && i < valueCount) {
                            if ($__R.mode) {
                                loop_continue16: {
                                    if ($__R.mode) strings[i] = { string: array[i], value: array[i] };
                                }

                                ++i;
                            }
                        }
                    }

                    if ($__R.mode) {
                        target = 22;
                        app8 = bucketSort.box(array, 0, strings, 0);
                    } else if (target === 22) app8 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
                } catch (exn9) {
                    if (exn9 instanceof $__T.Capture) {
                        exn9.stack.push({
                            kind: "rest",
                            f: fun22,
                            index: target,
                            locals: [app8, i, strings, valueCount],
                            params: [array, length],
                            this: this
                        });
                    }

                    throw exn9;
                }

                $__R.remainingStack++;
            };

            array = o;
            length = array.length >>> 0;
        }

        // For compatibility with Firefox and Chrome, do nothing observable
        // to the target array if it has 0 or 1 sortable properties.
        if ($__R.mode && length < 2) {
            if ($__R.mode) $__R.remainingStack++;

            return array;
        }

        if ($__R.mode && typeof comparator === "function" || !$__R.mode && target === 23) {
            if ($__R.mode) {
                target = 23;
                app9 = comparatorSort.box(array, length, comparator);
            } else if (target === 23) app9 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
        } else if ($__R.mode || !$__R.mode && (target === 25 || target === 24)) {
            if ($__R.mode && (comparator === null || comparator === undefined) || !$__R.mode && target === 24) {
                if ($__R.mode) {
                    target = 24;
                    app10 = stringSort.box(array, length);
                } else if (target === 24) app10 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
            } else if ($__R.mode || !$__R.mode && target === 25) {
                if ($__R.mode) {
                    app11 = new TypeError("Array.prototype.sort requires the comparsion function be a function or undefined");
                    $__R.pushTrace("Line 189: in array_sort");
                }

                throw app11;
            }
        }

        if ($__R.mode) $__R.remainingStack++;

        return array;
    } catch (exn10) {
        if (exn10 instanceof $__T.Capture) {
            exn10.stack.push({
                kind: "rest",
                f: fun23,
                index: target,
                locals: [app10, app11, compact, compactSparse, compactSlow, length, stringComparator, bucketSort, stringSort, min, comparatorSort, mergeSort, merge, app9, array],
                params: [o, comparator],
                this: this
            });
        }

        throw exn10;
    }

    $__R.remainingStack++;
};
if ($__R.mode) stopifyArray.box = function fun24(arr) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app12] = $frame.locals;
    }

    try {
        var app12;

        if ($__R.mode) {
            target = 26;
            app12 = Reflect.setPrototypeOf(arr, stopifyArrayPrototype.box);
        } else if (target === 26) app12 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
        // @stopify flat


        if ($__R.mode) $__R.remainingStack++;

        return arr;
    } catch (exn11) {
        if (exn11 instanceof $__T.Capture) {
            exn11.stack.push({
                kind: "rest",
                f: fun24,
                index: target,
                locals: [app12],
                params: [arr],
                this: this
            });
        }

        throw exn11;
    }

    $__R.remainingStack++;
};
if ($__R.mode) Object.defineProperty(exports, "__esModule", { value: true });
if ($__R.mode) fun0 = function funExpr0(f) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app14, app13, result01, i01, arg00] = $frame.locals;
    }

    try {
        var result01, i01, arg00, app13, app14;

        if ($__R.mode && arguments.length !== 1) {
            if ($__R.mode) $__R.pushTrace("Line 197: in (anonymous function)");

            throw new Error(`.map requires 1 argument`);
        }

        if ($__R.mode) {
            result01 = [];
            i01 = 0;
        }

        if ($__R.mode || !$__R.mode && (target === 30 || target === 29)) loop_break17: while ($__R.mode && i01 < this.length || !$__R.mode && (target === 30 || target === 29)) {
            if ($__R.mode || !$__R.mode && (target === 30 || target === 29)) loop_continue17: {
                if ($__R.mode) {
                    target = 29;
                    arg00 = f(this[i01]);
                } else if (target === 29) arg00 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode) {
                    target = 30;
                    app13 = result01.push(arg00);
                } else if (target === 30) app13 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
            }
            if ($__R.mode) ++i01;
        }

        if ($__R.mode) {
            target = 31;
            app14 = stopifyArray.box(result01);
        } else if (target === 31) app14 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) $__R.remainingStack++;

        return app14;
    } catch (exn12) {
        if (exn12 instanceof $__T.Capture) {
            exn12.stack.push({
                kind: "rest",
                f: funExpr0,
                index: target,
                locals: [app14, app13, result01, i01, arg00],
                params: [f],
                this: this
            });
        }

        throw exn12;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun1 = function funExpr1(f) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app17, app16, result02, i02, app15] = $frame.locals;
    }

    try {
        var result02, i02, app15, app16, app17;

        if ($__R.mode && arguments.length !== 1) {
            if ($__R.mode) $__R.pushTrace("Line 207: in (anonymous function)");

            throw new Error(`.filter requires 1 argument`);
        }

        if ($__R.mode) {
            result02 = [];
            i02 = 0;
        }

        if ($__R.mode || !$__R.mode && (target === 34 || target === 33)) loop_break18: while ($__R.mode && i02 < this.length || !$__R.mode && (target === 34 || target === 33)) {
            if ($__R.mode || !$__R.mode && (target === 34 || target === 33)) loop_continue18: {
                if ($__R.mode) {
                    target = 33;
                    app15 = f(this[i02]);
                } else if (target === 33) app15 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode && app15 || !$__R.mode && target === 34) {
                    if ($__R.mode) {
                        target = 34;
                        app16 = result02.push(this[i02]);
                    } else if (target === 34) app16 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);
                }
            }
            if ($__R.mode) ++i02;
        }

        if ($__R.mode) {
            target = 35;
            app17 = stopifyArray.box(result02);
        } else if (target === 35) app17 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) $__R.remainingStack++;

        return app17;
    } catch (exn13) {
        if (exn13 instanceof $__T.Capture) {
            exn13.stack.push({
                kind: "rest",
                f: funExpr1,
                index: target,
                locals: [app17, app16, result02, i02, app15],
                params: [f],
                this: this
            });
        }

        throw exn13;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun2 = function funExpr2(f, init) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app18, i, acc, arrLen] = $frame.locals;
    }

    try {
        var arrLen, acc, i, app18;

        if ($__R.mode && arguments.length !== 2) {
            if ($__R.mode) $__R.pushTrace("Line 219: in (anonymous function)");

            throw new Error(`.reduceRight requires 2 arguments`);
        }

        if ($__R.mode) {
            arrLen = this.length;
            acc = init;
            i = arrLen - 1;
        }

        if ($__R.mode || !$__R.mode && target === 37) loop_break19: while ($__R.mode && i >= 0 || !$__R.mode && target === 37) {
            if ($__R.mode || !$__R.mode && target === 37) loop_continue19: {
                if ($__R.mode) {
                    target = 37;
                    app18 = f(acc, this[i]);
                } else if (target === 37) app18 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode) {
                    acc = app18;
                    i = i - 1;
                }
            }
        }
        if ($__R.mode) $__R.remainingStack++;

        return acc;
    } catch (exn14) {
        if (exn14 instanceof $__T.Capture) {
            exn14.stack.push({
                kind: "rest",
                f: funExpr2,
                index: target,
                locals: [app18, i, acc, arrLen],
                params: [f, init],
                this: this
            });
        }

        throw exn14;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun3 = function funExpr3(f, init) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app19, i, acc, arrLen] = $frame.locals;
    }

    try {
        var arrLen, acc, i, app19;

        if ($__R.mode && arguments.length !== 2) {
            if ($__R.mode) $__R.pushTrace("Line 232: in (anonymous function)");

            throw new Error(`.reduce requires 2 arguments`);
        }

        if ($__R.mode) {
            arrLen = this.length;
            acc = init;
            i = 0;
        }

        if ($__R.mode || !$__R.mode && target === 39) loop_break20: while ($__R.mode && i < arrLen || !$__R.mode && target === 39) {
            if ($__R.mode || !$__R.mode && target === 39) loop_continue20: {
                if ($__R.mode) {
                    target = 39;
                    app19 = f(acc, this[i]);
                } else if (target === 39) app19 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode) {
                    acc = app19;
                    i = i + 1;
                }
            }
        }
        if ($__R.mode) $__R.remainingStack++;

        return acc;
    } catch (exn15) {
        if (exn15 instanceof $__T.Capture) {
            exn15.stack.push({
                kind: "rest",
                f: funExpr3,
                index: target,
                locals: [app19, i, acc, arrLen],
                params: [f, init],
                this: this
            });
        }

        throw exn15;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun4 = function funExpr4(pred) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app20, l, i] = $frame.locals;
    }

    try {
        var i, l, app20;

        if ($__R.mode && arguments.length !== 1) {
            if ($__R.mode) $__R.pushTrace("Line 245: in (anonymous function)");

            throw new Error(`.some requires 1 argument`);
        }

        if ($__R.mode) {
            i = 0;
            l = this.length;
        }

        if ($__R.mode || !$__R.mode && target === 41) loop_break21: while ($__R.mode && i < l || !$__R.mode && target === 41) {
            if ($__R.mode || !$__R.mode && target === 41) loop_continue21: {
                if ($__R.mode) {
                    target = 41;
                    app20 = pred(this[i]);
                } else if (target === 41) app20 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode && app20) {
                    if ($__R.mode) $__R.remainingStack++;

                    return true;
                }

                if ($__R.mode) i = i + 1;
            }
        }
        if ($__R.mode) $__R.remainingStack++;

        return false;
    } catch (exn16) {
        if (exn16 instanceof $__T.Capture) {
            exn16.stack.push({
                kind: "rest",
                f: funExpr4,
                index: target,
                locals: [app20, l, i],
                params: [pred],
                this: this
            });
        }

        throw exn16;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun5 = function funExpr5(pred) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app21, l, i] = $frame.locals;
    }

    try {
        var i, l, app21;

        if ($__R.mode && arguments.length !== 1) {
            if ($__R.mode) $__R.pushTrace("Line 259: in (anonymous function)");

            throw new Error(`.every requires 1 argument`);
        }

        if ($__R.mode) {
            i = 0;
            l = this.length;
        }

        if ($__R.mode || !$__R.mode && target === 43) loop_break22: while ($__R.mode && i < l || !$__R.mode && target === 43) {
            if ($__R.mode || !$__R.mode && target === 43) loop_continue22: {
                if ($__R.mode) {
                    target = 43;
                    app21 = pred(this[i]);
                } else if (target === 43) app21 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode && !app21) {
                    if ($__R.mode) $__R.remainingStack++;

                    return false;
                }

                if ($__R.mode) i = i + 1;
            }
        }
        if ($__R.mode) $__R.remainingStack++;

        return true;
    } catch (exn17) {
        if (exn17 instanceof $__T.Capture) {
            exn17.stack.push({
                kind: "rest",
                f: funExpr5,
                index: target,
                locals: [app21, l, i],
                params: [pred],
                this: this
            });
        }

        throw exn17;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun6 = function funExpr6(pred) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app22, l, i] = $frame.locals;
    }

    try {
        var i, l, app22;

        if ($__R.mode && arguments.length !== 1) {
            if ($__R.mode) $__R.pushTrace("Line 273: in (anonymous function)");

            throw new Error(`.find requires 1 argument`);
        }

        if ($__R.mode) {
            i = 0;
            l = this.length;
        }

        if ($__R.mode || !$__R.mode && target === 45) loop_break23: while ($__R.mode && i < l || !$__R.mode && target === 45) {
            if ($__R.mode || !$__R.mode && target === 45) loop_continue23: {
                if ($__R.mode) {
                    target = 45;
                    app22 = pred(this[i]);
                } else if (target === 45) app22 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode && app22) {
                    if ($__R.mode) $__R.remainingStack++;

                    return this[i];
                }

                if ($__R.mode) i = i + 1;
            }
        }
    } catch (exn18) {
        if (exn18 instanceof $__T.Capture) {
            exn18.stack.push({
                kind: "rest",
                f: funExpr6,
                index: target,
                locals: [app22, l, i],
                params: [pred],
                this: this
            });
        }

        throw exn18;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun7 = function funExpr7(pred) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app23, l, i] = $frame.locals;
    }

    try {
        var i, l, app23;

        if ($__R.mode && arguments.length !== 1) {
            if ($__R.mode) $__R.pushTrace("Line 286: in (anonymous function)");

            throw new Error(`.findIndex requires 1 argument`);
        }

        if ($__R.mode) {
            i = 0;
            l = this.length;
        }

        if ($__R.mode || !$__R.mode && target === 47) loop_break24: while ($__R.mode && i < l || !$__R.mode && target === 47) {
            if ($__R.mode || !$__R.mode && target === 47) loop_continue24: {
                if ($__R.mode) {
                    target = 47;
                    app23 = pred(this[i]);
                } else if (target === 47) app23 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode && app23) {
                    if ($__R.mode) $__R.remainingStack++;

                    return i;
                }

                if ($__R.mode) i = i + 1;
            }
        }
        if ($__R.mode) $__R.remainingStack++;

        return -1;
    } catch (exn19) {
        if (exn19 instanceof $__T.Capture) {
            exn19.stack.push({
                kind: "rest",
                f: funExpr7,
                index: target,
                locals: [app23, l, i],
                params: [pred],
                this: this
            });
        }

        throw exn19;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun8 = function method0(f) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app24, l, i] = $frame.locals;
    }

    try {
        var i, l, app24;

        if ($__R.mode && arguments.length !== 1) {
            if ($__R.mode) $__R.pushTrace("Line 301: in method0");

            throw new Error(`.forEach requires 1 argument`);
        }

        if ($__R.mode) {
            i = 0;
            l = this.length;
        }

        if ($__R.mode || !$__R.mode && target === 49) loop_break25: while ($__R.mode && i < l || !$__R.mode && target === 49) {
            if ($__R.mode || !$__R.mode && target === 49) loop_continue25: {
                if ($__R.mode) {
                    target = 49;
                    app24 = f(this[i]);
                } else if (target === 49) app24 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

                if ($__R.mode) i = i + 1;
            }
        }
    } catch (exn20) {
        if (exn20 instanceof $__T.Capture) {
            exn20.stack.push({
                kind: "rest",
                f: method0,
                index: target,
                locals: [app24, l, i],
                params: [f],
                this: this
            });
        }

        throw exn20;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun9 = function funExpr8(comparator) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app25, arg01] = $frame.locals;
    }

    try {
        var arg01, app25;

        if ($__R.mode && arguments.length !== 1) {
            if ($__R.mode) $__R.pushTrace("Line 312: in (anonymous function)");

            throw new Error(`.sort requires 1 argument`);
        }

        if ($__R.mode) {
            target = 51;
            arg01 = array_sort.box(this, comparator);
        } else if (target === 51) arg01 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) {
            target = 52;
            app25 = stopifyArray.box(arg01);
        } else if (target === 52) app25 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) $__R.remainingStack++;

        return app25;
    } catch (exn21) {
        if (exn21 instanceof $__T.Capture) {
            exn21.stack.push({
                kind: "rest",
                f: funExpr8,
                index: target,
                locals: [app25, arg01],
                params: [comparator],
                this: this
            });
        }

        throw exn21;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun10 = function funExpr9(begin, end) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app26, arg02] = $frame.locals;
    }

    try {
        var arg02, app26;

        if ($__R.mode && arguments.length !== 2) {
            if ($__R.mode) $__R.pushTrace("Line 318: in (anonymous function)");

            throw new Error(`.slice requires 2 arguments`);
        }

        if ($__R.mode && (begin < 0 || end > this.length)) {
            if ($__R.mode) $__R.pushTrace("Line 321: in (anonymous function)");

            throw new Error(`.slice requires begin and end range to be within array`);
        }

        if ($__R.mode) {
            target = 55;
            arg02 = Array.prototype.slice.call(this, begin, end);
        } else if (target === 55) arg02 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) {
            target = 56;
            app26 = stopifyArray.box(arg02);
        } else if (target === 56) app26 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) $__R.remainingStack++;

        return app26;
    } catch (exn22) {
        if (exn22 instanceof $__T.Capture) {
            exn22.stack.push({
                kind: "rest",
                f: funExpr9,
                index: target,
                locals: [app26, arg02],
                params: [begin, end],
                this: this
            });
        }

        throw exn22;
    }

    $__R.remainingStack++;
};
if ($__R.mode) fun11 = function funExpr10(anotherArray) {
    var target = null;
    var $frame = null;
    $__R.remainingStack--;

    if (!$__R.mode) {
        const $frame = $__R.stack.pop();
        target = $frame.index;
        [app27, arg03] = $frame.locals;
    }

    try {
        var arg03, app27;

        if ($__R.mode && arguments.length !== 1) {
            if ($__R.mode) $__R.pushTrace("Line 327: in (anonymous function)");

            throw new Error(`.concat requires 1 argument`);
        }

        if ($__R.mode) {
            target = 58;
            arg03 = Array.prototype.concat.call(this, anotherArray);
        } else if (target === 58) arg03 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) {
            target = 59;
            app27 = stopifyArray.box(arg03);
        } else if (target === 59) app27 = $__R.stack[$__R.stack.length - 1].f.apply($__R.stack[$__R.stack.length - 1].this, $__R.stack[$__R.stack.length - 1].params);

        if ($__R.mode) $__R.remainingStack++;

        return app27;
    } catch (exn23) {
        if (exn23 instanceof $__T.Capture) {
            exn23.stack.push({
                kind: "rest",
                f: funExpr10,
                index: target,
                locals: [app27, arg03],
                params: [anotherArray],
                this: this
            });
        }

        throw exn23;
    }

    $__R.remainingStack++;
};
if ($__R.mode) stopifyArrayPrototype.box = {
    __proto__: Array.prototype,
    map: fun0,
    filter: fun1,
    reduceRight: fun2,
    reduce: fun3,
    some: fun4,
    every: fun5,
    find: fun6,
    findIndex: fun7,
    // NOTE(arjun): Ignores thisArg
    forEach: fun8,

    sort: fun9,
    slice: fun10,
    concat: fun11
};
if ($__R.mode) exports.stopifyArray = stopifyArray.box;