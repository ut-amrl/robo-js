"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const common = require("./abstractRuntime");
__export(require("./abstractRuntime"));
class RetvalRuntime extends common.RuntimeImpl {
    constructor(stackSize, restoreFrames) {
        super(stackSize, restoreFrames);
        this.kind = 'retval';
    }
    captureCC(f) {
        this.capturing = true;
        return new common.Capture(f, []);
    }
    makeCont(stack) {
        const savedStack = this.savedStack;
        this.savedStack = [];
        for (let i = stack.length - 1; i >= this.restoreFrames; i -= 1) {
            savedStack.push(stack.pop());
        }
        return (x) => {
            let restarter = () => {
                if (x.type === 'exception') {
                    throw x.value;
                }
                else {
                    return x.value;
                }
            };
            return new common.Restore([this.topK(restarter), ...stack], savedStack);
        };
    }
    endTurn(callback) {
        throw new common.EndTurn(callback);
    }
    abstractRun(body) {
        try {
            const v = body();
            if (v instanceof common.Capture) {
                this.capturing = false;
                return { type: 'capture', stack: v.stack, f: v.f };
            }
            else if (v instanceof common.Restore) {
                return { type: 'restore', stack: v.stack, savedStack: v.savedStack };
            }
            else {
                return { type: 'normal', value: v };
            }
        }
        catch (exn) {
            if (exn instanceof common.EndTurn) {
                return { type: 'end-turn', callback: exn.callback };
            }
            return { type: 'exception', value: exn };
        }
    }
}
exports.RetvalRuntime = RetvalRuntime;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0dmFsUnVudGltZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ydW50aW1lL3JldHZhbFJ1bnRpbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSw0Q0FBNEM7QUFDNUMsdUNBQWtDO0FBSWxDLE1BQWEsYUFBYyxTQUFRLE1BQU0sQ0FBQyxXQUFXO0lBR25ELFlBQVksU0FBaUIsRUFBRSxhQUFxQjtRQUNsRCxLQUFLLENBQUMsU0FBUyxFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBSGxDLFNBQUksR0FBd0IsUUFBUSxDQUFDO0lBSXJDLENBQUM7SUFFRCxTQUFTLENBQUMsQ0FBaUM7UUFDekMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDdEIsT0FBTyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxRQUFRLENBQUMsS0FBWTtRQUNuQixNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ25DLElBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDO1FBQ3JCLEtBQUksSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM3RCxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUcsQ0FBQyxDQUFDO1NBQy9CO1FBRUQsT0FBTyxDQUFDLENBQVMsRUFBRSxFQUFFO1lBQ25CLElBQUksU0FBUyxHQUFHLEdBQUcsRUFBRTtnQkFDbkIsSUFBSSxDQUFDLENBQUMsSUFBSSxLQUFLLFdBQVcsRUFBRTtvQkFDMUIsTUFBTSxDQUFDLENBQUMsS0FBSyxDQUFDO2lCQUNmO3FCQUNJO29CQUNILE9BQU8sQ0FBQyxDQUFDLEtBQUssQ0FBQztpQkFDaEI7WUFDSCxDQUFDLENBQUM7WUFDRixPQUFPLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsR0FBRyxLQUFLLENBQUMsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUMxRSxDQUFDLENBQUM7SUFDSixDQUFDO0lBRUQsT0FBTyxDQUFDLFFBQTZDO1FBQ25ELE1BQU0sSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxXQUFXLENBQUMsSUFBZTtRQUN6QixJQUFJO1lBQ0YsTUFBTSxDQUFDLEdBQUcsSUFBSSxFQUFFLENBQUM7WUFDakIsSUFBSSxDQUFDLFlBQVksTUFBTSxDQUFDLE9BQU8sRUFBRTtnQkFDL0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7Z0JBQ3ZCLE9BQU8sRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7YUFDcEQ7aUJBQ0ksSUFBSSxDQUFDLFlBQVksTUFBTSxDQUFDLE9BQU8sRUFBRTtnQkFDcEMsT0FBTyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQzthQUN0RTtpQkFDSTtnQkFDSCxPQUFPLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDckM7U0FDRjtRQUNELE9BQU8sR0FBRyxFQUFFO1lBQ1YsSUFBSSxHQUFHLFlBQVksTUFBTSxDQUFDLE9BQU8sRUFBRTtnQkFDakMsT0FBTyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQzthQUNyRDtZQUNELE9BQU8sRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQztTQUMxQztJQUNILENBQUM7Q0FDRjtBQXpERCxzQ0F5REMifQ==